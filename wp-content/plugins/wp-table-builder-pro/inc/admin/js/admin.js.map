{"version":3,"sources":["WPTB_BordersManage.js","WPTB_ColumnMove.js","WPTB_RowMove.js","WPTB_TableDirectives.js"],"names":["WPTB_BordersManage","options","arguments","length","undefined","table","this","WPTB_RecalculateIndexes","thisObject","itemsPerHeader","tableMaxCols","maxCols","cellsStylesScheme","tableDirectives","WPTB_TableDirectives","bordersInitialization","responsiveFront","typeFirst","typeSecond","borderRadiusVal","switchMode","getDirective","_typeof","WPTB_GetDirectionAfterReconstruction","hasOwnProperty","addEventListener","e","switchModeObj","tableOld","newTable","switchBorderOnlyColumnRow","type","borderRadiusesSet","spaceBorderSpacingExchange","call","value","parseInt","tds2","tds","querySelectorAll","_toConsumableArray","setDirective","map","td","style","borderRadius","tds1","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","rowsLength","rows","dataYIndexStart","tdsTop","concat","tdsBottom","_this","borderWidth","innerBordersSet","tableRows","columnCount","firstRowTds","children","firstRowTdLast","dataset","xIndex","colSpan","row","previousSibling","borderRightWidth","nextSibling","borderLeftWidth","_ret","rowsCount","v","rowSpan","borderBottomWidth","tdsBetween","i","tdsRow","borderTopWidth","getElementsByTagName","typeNumber","borderSpacing","split","reverse","join","rowBgColorReplaceToCellBgColor","color","trs","tr","wptbBgColor","window","getComputedStyle","getPropertyValue","backgroundColor","changeRowBgColor","tblRow","selector","bgColor","wptbRowBgColor","orgColor","getAttribute","setAttribute","changeColumnBgColor","index","wptbColumnBgColor","forEach","querySelector","wptbOwnBgColor","WPTB_ColumnMove","rowMovingField","withdrawTable","tablePreview","tBody","body","setTimeoutWhenStopMove","wptbHeaderCoordinates","wptbContainer","setTimeoutScrollTop","autoScroll","eventMove","columnMovingFieldPutActive","visualButtonBox","columnMovingField","document","getElementsByClassName","createElement","classList","add","innerHTML","visualButtonBoxBottom","cloneNode","appendChild","deleteEventHandlers","removeEventListener","columnMovingFieldParametrsTwo","wptbHighlighted","columnMovingFieldParametrsOne","checkHighlighted","insertColumnMoving","withdrawColumnTableContainer","withdrawTableContainer","display","differenceX","downXcoordinates","clientX","columnMovingFieldLeftCoordinates","parseFloat","positionLeft","ColumnMovingFieldRightCoordinates","width","tableCoordinatesLeft","getBoundingClientRect","left","tableCoordinatesRight","right","columnsMovingDeleted","columnsLeftRightCoordinatesArr","columnsMovingThisRow","j","push","cutTableVertically","removeChild","afterTd","k","insertBefore","recalculateIndexes","glueTableVertically","setColumnsLeftRightCoordinates","WPTB_Helper","wptbDocumentEventGenerate","col","cell","colspan","getNecessaryCell","step","tdNecessary","tdNecessaryBorderCoordinate","thisCol","tdsNecessary","onmousedown","eventDown","wptbRowMovingField","withdrawSelectedColumnsFromTable","position","top","height","onmousemove","wptbTableSetup","wptbTableSetupCoordinates","setIntervalPeriod","clearInterval","setIntervalScrollLeft","movementX","startScrollPositionY","startScrollPositionX","setInterval","scrollLeft","onmouseup","withdrewColumnsPut","undoSelect","WPTB_TableStateSaveManager","tableStateSet","coordinatesHighlighted","coordinatesHighlightedWidth","coordinatesPreviewTable","tableWithdrewColumn","maxHeight","movingfieldTransition","time","intervalId","highlighted","parentNode","rowMovingFieldHide","tableWithdrewColumns","tableWithdrewColumnsTbody","tdsWidthWhichNeedAdd","remove","removeAttribute","tableAttributes","attributes","nodeName","nodeValue","minWidth","arrWithTdsWhichNeedAddWidth","rowChildren","rowWithdrewColumnsHeight","rowWithdrewColumns","insertRow","wptbTdStyleBeforeMove","newTd","yIndex","cellFullStyleObj","paddingLeft","paddingRight","widthWhichNeedAdd","tdsWhichNeedAddWidth","borderCollapse","bSColumns","tableBS","tableBsArr","Array","isArray","trim","bottom","WPTB_CutGlueTable","temporaryShow","wptbColumnMoving","hasAttribute","wptbColumnMove","WPTB_RowMove","rowMovingFieldPutActive","visualButtonBoxLeft","rowMovingFieldParametrsOne","rowMovingFieldParametrsTwo","insertRowsMoving","differenceY","downYcoordinates","clientY","rowMovingFieldTopCoordinates","positionTop","rowMovingFieldBottomCoordinates","tableCoordinatesTop","tableCoordinatesBottom","rowsMoving","rowsMovingDeleted","rowsTopBottomCoordinatesArr","console","log","cutTableHorizontally","glueTableHorizontally","setRowsTopBottomCoordinates","rowspan","topCoordinates","bottomCoordinates","wptbColumnMovingField","withdrawSelectedRowsFromTable","maxWidth","overflow","marginLeft","setIntervalScrollTop","movementY","scrollTop","withdrewRowsPut","coordinatesHighlightedHeight","tableWithdrewRows","tableWithdrewRowsTbody","tableRowsWithDrewArr","withdrewRow","rowsIChildren","rowNew","bSRows","WPTB_Cell","mark","getDOMElement","wptbCssTdAutoWidth","rowBefore","contains","wptbRowMove","tableDirectivesDataKey","getDirectives","encodedTableDirectives","JSON","parse","atob","saveDirectives","btoa","stringify","way","field"],"mappings":"mtCAAA,IAAIA,mBAAqB,WAAwB,IAAdC,EAAc,EAAAC,UAAAC,aAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GACrCG,EAAQJ,EAAQI,MACpBC,KAAKD,MAAQJ,EAAQI,MACrBE,wBAAwBF,GACxB,IAAMG,EAAaF,KACnBA,KAAKG,eAAiB,EACtBH,KAAKI,aAAeL,EAAMM,QAC1BL,KAAKM,kBAAoB,GAEzB,IAAMC,EAAkB,IAAIC,qBAAqBT,GAQjDC,KAAKS,sBAAwB,SAASC,GAClC,IAAIC,EACAC,EACAC,EAYAC,EAX4D,QAA7DP,EAAgBQ,aAAa,CAAC,eAAgB,YAC7CJ,EAAY,MACZC,EAAa,UACsD,WAA7DL,EAAgBQ,aAAa,CAAC,eAAgB,aACpDJ,EAAY,SACZC,EAAa,OAEdL,EAAgBQ,aAAa,CAAC,eAAgB,qBAC7CF,EAAkBN,EAAgBQ,aAAa,CAAC,eAAgB,iBAAkBR,EAAgBQ,aAAa,CAAC,eAAgB,cAChIJ,GAAkC,iBAAdA,GAA2BC,GAAoC,iBAAfA,IAI/C,WAAtBI,QAFCF,EAAaG,qCAAqCjB,KAAKD,MAAOY,EAAWC,EAAY,SAAUF,KAE9DI,EAAWI,eAAe,WAoB3DlB,KAAKD,MAAMoB,iBACP,gBACA,SAAUC,IArBd,SAA+BA,GAC3B,IAAIC,EAAgBP,EAAU,OAAQM,GACV,WAAzBJ,QAAOK,KACNrB,KAAKG,eAAiBkB,EAAclB,eACjCkB,EAAcH,eAAe,aACxBI,EAAWtB,KAAKD,MACpBC,KAAKD,MAAQsB,EAAcE,SAC3BvB,KAAKwB,0BAA0BH,EAAcI,KAAK,IAClDzB,KAAK0B,kBAAkBL,EAAcI,KAAK,GAAIZ,GAC9Cb,KAAK2B,2BAA2BN,EAAcI,KAAK,IACnDzB,KAAKD,MAAQuB,IAEbtB,KAAKwB,0BAA0BH,EAAcI,KAAK,IAClDzB,KAAK0B,kBAAkBL,EAAcI,KAAK,GAAIZ,GAC9Cb,KAAK2B,2BAA2BN,EAAcI,KAAK,OAQlCG,KAAK1B,EAAYkB,KAE1C,KAWZpB,KAAK0B,kBAAoB,SAAUD,EAAMI,GACjCC,SAASD,EAAO,MAChBA,EAAQ,MAEZ,IAwBQE,EAxBJC,EAAMhC,KAAKD,MAAMkC,iBAAiB,MACtCD,EAAGE,mBAAOF,GACV,GAAY,QAATP,EACClB,EAAgB4B,aAAa,CAAC,eAAgB,iBAAkB,OAAQN,GACrEA,IACCA,GAAgB,MAEpBG,EAAII,IAAI,SAAAC,GACJA,EAAGC,MAAMC,aAAeV,SAEzB,GAAY,QAATJ,EACNlB,EAAgB4B,aAAa,CAAC,eAAgB,iBAAkB,OAAQN,GACxEG,EAAII,IAAI,SAAAC,GACJA,EAAGC,MAAMC,aAAe,OAEzBV,IACKW,EAAOxC,KAAKD,MAAMkC,iBAAiB,sBACvCO,EAAIN,mBAAOM,IACNJ,IAAI,SAAAC,GACLA,EAAGC,MAAMG,oBAAsBZ,EAAQ,KACvCQ,EAAGC,MAAMI,uBAAyBb,EAAQ,OAG1CE,EAAO/B,KAAKD,MAAMkC,iBAAiB,qBACvCF,EAAIG,mBAAOH,IACNK,IAAI,SAAAC,GACLA,EAAGC,MAAMK,qBAAuBd,EAAQ,KACxCQ,EAAGC,MAAMM,wBAA0Bf,EAAQ,aAGhD,GAAY,WAATJ,IACNlB,EAAgB4B,aAAa,CAAC,eAAgB,iBAAkB,UAAWN,GAC3EG,EAAII,IAAI,SAAAC,GACJA,EAAGC,MAAMC,aAAe,OAEzBV,GAGC,IAFA,IAAIgB,EAAa7C,KAAKD,MAAM+C,KAAKjD,OAC7BkD,EAAkB,EACF,EAAbF,GAAgB,CACnB,IAAIG,EAAShD,KAAKD,MAAMkC,iBAAX,kBAAAgB,OAA8CF,EAA9C,QACbC,EAAMd,mBAAOc,IACNZ,IAAI,SAACC,GACRA,EAAGC,MAAMG,oBAAsBZ,EAAQ,KACvCQ,EAAGC,MAAMK,qBAAuBd,EAAQ,OAGxCqB,OAAS,EAETA,EADDlD,KAAKG,gBAAkB4C,EAAkB/C,KAAKG,eAAiB0C,GAAcE,EAAkB,EAAIF,EACtF7C,KAAKD,MAAMkC,iBAAX,kBAAAgB,OAA8CF,EAAkB/C,KAAKG,eAArE,OAEAH,KAAKD,MAAMkC,iBAAiB,qBAG5CiB,EAAShB,mBAAOgB,IACNd,IAAI,SAACC,GACXA,EAAGC,MAAMI,uBAAyBb,EAAQ,KAC1CQ,EAAGC,MAAMM,wBAA0Bf,EAAQ,OAG3C7B,KAAKG,gBACL0C,GAAc7C,KAAKG,eAAiB,EACpC4C,GAAmB/C,KAAKG,eAAiB,GAEzC0C,EAAa,IAOjC7C,KAAKwB,0BAA4B,SAAUC,GAAM,IAAA0B,EAAAnD,KACzCoD,EAAc7C,EAAgBQ,aAAa,CAAC,eAAgB,gBAGhE,GAFAf,KAAKqD,gBAAgBD,GAER,QAAT3B,EAAgB,CAChB,IAAI6B,EAAYtD,KAAKD,MAAM+C,KACvBS,EAAc,EACK,EAAnBD,EAAUzD,SAEN2D,EADWF,EAAU,GACEG,SAEvBC,GADJF,EAAWtB,mBAAOsB,IACeA,EAAY3D,OAAS,GACtD0D,EAAczB,SAAS4B,EAAeC,QAAQC,QAAUF,EAAeG,UAG3EP,EAASpB,mBAAOoB,IAENlB,IAAI,SAAA0B,GACN9B,EAAM8B,EAAIL,UACdzB,EAAGE,mBAAOF,IACNI,IAAI,SAAAC,GACsB,OAAvBA,EAAG0B,gBACE1B,EAAGwB,QAAUN,IACblB,EAAGC,MAAM0B,iBAAmB,QAEP,OAAnB3B,EAAG4B,cAGT5B,EAAGC,MAAM0B,iBAAmB,OAF5B3B,EAAGC,MAAM4B,gBAAkB,WAOvC3D,EAAgB4B,aAAa,CAAC,eAAgB,UAAW,YACtD,GAAa,WAATV,EAAmB,CAAA0C,EAAA,WAC1B,IACIC,EADYjB,EAAKpD,MAAM+C,KACDjD,OAC1B,GAAIuE,GAAa,EAAG,MAAA,CAAAC,OAAA,GAIpB,IAFA,IAAIxB,EAAaM,EAAKpD,MAAM+C,KAAKjD,OAC7BkD,EAAkB,EACF,EAAbF,GAAgB,CACnB,IAAIG,EAASG,EAAKpD,MAAMkC,iBAAX,kBAAAgB,OAA8CF,EAA9C,QACbC,EAAMd,mBAAOc,IACNZ,IAAI,SAACC,GACJA,EAAGiC,QAAUF,IACb/B,EAAGC,MAAMiC,kBAAoB,SAIrC,IAAIC,EAAa,GACbtB,OAAS,EACb,GAAGC,EAAKhD,gBAAkB4C,EAAkBI,EAAKhD,eAAiB0C,GAAcE,EAAkB,EAAIF,EAAY,CAC9G,IAAI,IAAI4B,EAAI1B,EAAkB,EAAG0B,EAAI1B,EAAkBI,EAAKhD,eAAgBsE,IACxE,IAAIC,EAASvB,EAAKpD,MAAMkC,iBAAX,kBAAAgB,OAA8CwB,EAA9C,OACbC,EAAMxC,mBAAOwC,GACbF,EAAaA,EAAWvB,OAAOyB,GAGnCxB,EAAYC,EAAKpD,MAAMkC,iBAAX,kBAAAgB,OAA8CF,EAAkBI,EAAKhD,eAArE,WACT,CACH,IAAI,IAAIsE,EAAI1B,EAAkB,EAAG0B,EAAItB,EAAKpD,MAAM+C,KAAKjD,OAAS,EAAG4E,IAAK,CAClE,IAAIC,EAASvB,EAAKpD,MAAMkC,iBAAX,kBAAAgB,OAA8CwB,EAA9C,OACbC,EAAMxC,mBAAOwC,GACbF,EAAaA,EAAWvB,OAAOyB,GAGnCxB,EAAYC,EAAKpD,MAAMkC,iBAAiB,oBAG5CuC,EAAWpC,IAAI,SAAAC,GACXA,EAAGC,MAAMqC,eAAiB,MAC1BtC,EAAGC,MAAMiC,kBAAoB,SAGjCrB,EAAShB,mBAAOgB,IACNd,IAAI,SAACC,GACXA,EAAGC,MAAMqC,eAAiB,QAG1BxB,EAAKhD,gBACL0C,GAAcM,EAAKhD,eAAiB,EACpC4C,GAAmBI,EAAKhD,eAAiB,GAEzC0C,EAAa,EAIrBtC,EAAgB4B,aAAa,CAAC,eAAgB,UAAW,UAtD/B,GAAA,GAAA,WAAAnB,QAAAmD,GAAA,OAAAA,EAAAE,MAuDX,OAAR5C,GACPlB,EAAgB4B,aAAa,CAAC,eAAgB,UAAW,QAIjEnC,KAAKqD,gBAAkB,SAAUxB,GAC7B,IAAIG,EAAMhC,KAAKD,MAAM6E,qBAAqB,OAC1C5C,EAAGE,mBAAOF,IACNI,IAAI,SAAAC,GACJA,EAAGC,MAAMc,YAAcvB,EAAQ,OAGnCtB,EAAgB4B,aAAa,CAAC,eAAgB,eAAgBN,GAC9DtB,EAAgB4B,aAAa,CAAC,eAAgB,UAAW,QAG7DnC,KAAK2B,2BAA6B,SAAUkD,GACrC7E,KAAKD,MAAMuC,MAAMwC,gBACG,IAAfD,IAAqBtE,EAAgBQ,aAAa,CAAC,eAAgB,gBAAiB,iBACO,iBAAnFR,EAAgBQ,aAAa,CAAC,eAAgB,gBAAiB,iBACnER,EAAgBQ,aAAa,CAAC,eAAgB,gBAAiB,kBAAoB8D,KACvF7E,KAAKD,MAAMuC,MAAMwC,cAAgB9E,KAAKD,MAAMuC,MAAMwC,cAAcC,MAAM,KAAKC,UAAUC,KAAK,KAC1F1E,EAAgB4B,aAAa,CAAC,eAAgB,gBAAiB,eAAgB0C,KAK3F7E,KAAKkF,+BAAiC,SAAUC,GAmB5C,IAlBA,IAGI1D,EADiB,EAFClB,EAAgBQ,aAAa,CAAC,eAAgB,iBAAkBR,EAAgBQ,aAAa,CAAC,eAAgB,aAgBhIqE,EAAMpF,KAAKD,MAAMkC,iBAAiB,MAE7BwC,EAAI,EAAGA,EAAIW,EAAIvF,OAAQ4E,IAAK,CACjC,IAAIY,EAAKD,EAAIX,GACTY,IAKAA,EAAG1B,QAAQ2B,aACIC,OAAOC,iBAAiBH,EAAI,MACrBI,iBAAiB,oBAOvCJ,EAAG/C,MAAMoD,iBADD,IAATjE,EAC4B,YAEA4D,EAAG1B,QAAQ2B,aAAuC,QAqBzFtF,KAAK2F,iBAAmB,SAAUC,EAAQC,GACtC,IAAMC,EAAUD,EAASlC,QAAQoC,eAC3BC,EAAWJ,EAAOK,aAAa,gBAEjCH,IAIIE,EAAUJ,EAAOM,aAAa,eAAgBJ,GAC7CF,EAAOtD,MAAMoD,gBAAkBI,IAI5C9F,KAAKmG,oBAAsB,SAAUN,GACjC,IAAMO,EAAQtE,SAAS+D,EAASlC,QAAQC,QAAU,EAC5CkC,EAAUD,EAASlC,QAAQ0C,kBACrBrG,KAAKD,MAAMkC,iBAAiB,MAEpCqE,QAAQ,SAAAjB,GACJhD,EAAKgD,EAAGkB,cAAH,gBAAAtD,OAAiCmD,EAAjC,MAEJ/D,EAAGsB,QAAQ6C,iBAAgBnE,EAAGC,MAAMoD,gBAAkBI,O,k+BCnVvE,IAAIW,gBAAkB,WAAY,IAAAtD,EAAAnD,KAC9BA,KAAK0G,eAEL1G,KAAK2G,cAEL3G,KAAK4G,aAEL5G,KAAK6G,MAEL7G,KAAK8G,KAEL9G,KAAK+G,uBAEL/G,KAAKgH,sBAELhH,KAAKiH,cAELjH,KAAKkH,oBAELlH,KAAKmH,YAAa,EAElBnH,KAAKoH,UAILpH,KAAKqH,2BAA6B,WAC9B,IAQQC,EARJC,EAAoBC,SAASC,uBAAwB,4BACrDX,EAAOU,SAAS5C,qBAAsB,QAAS,GACnDzB,EAAK2D,KAAOA,EACmB,EAA3BS,EAAkB1H,OAClBsD,EAAKoE,kBAAoBA,EAAkB,KAE3CA,EAAoBC,SAASE,cAAe,QAC1BC,UAAUC,IAAK,6BAC7BN,EAAkBE,SAASE,cAAe,QAC9BC,UAAUC,IAAK,4BAC/BN,EAAgBO,UAAY,mrCAWxBC,EAAwBR,EAAgBS,WAAW,IAEjCJ,UAAUC,IAAK,gCAErCL,EAAkBS,YAAaV,GAC/BC,EAAkBS,YAAaF,GAE/BhB,EAAKkB,YAAaT,GAElBpE,EAAKoE,kBAAoBA,GAE7BA,EAAkBU,oBAAsB,WAChBT,SAASC,uBAAwB,kBAAmB,GAC1DS,oBAAqB,SAAU/E,EAAKgF,+BAA+B,GACjF5C,OAAO2C,oBAAqB,SAAU/E,EAAKgF,+BAA+B,IAIxEhF,EAAK8D,gBACP9D,EAAK8D,cAAgBO,SAASC,uBAAwB,kBAAmB,IAE7E,IAAIR,EAAgB9D,EAAK8D,cAErBmB,EAAkBZ,SAASC,uBAAwB,oBAC1B,EAAzBW,EAAgBvI,SAChBuI,EAAkBA,EAAgB,GAElCjF,EAAKkF,gCACLlF,EAAKgF,iCAGTlB,EAAc9F,iBAAkB,SAAUgC,EAAKgF,+BAA+B,GAC9E5C,OAAOpE,iBAAkB,SAAUgC,EAAKgF,+BAA+B,GACvErB,EAAK3F,iBAAkB,QAASgC,EAAKmF,kBAAkB,GAG9B,SAArBC,EAAuBnB,GACjBjE,EAAKqF,+BACPrF,EAAKsF,uBAAyBjB,SAASjB,cAAe,0CAE7BpD,EAAKsF,uBAEXnG,MAAMoG,QAAU,QAEjCvF,EAAKoE,oBACPpE,EAAKoE,kBAAoBC,SAASjB,cAAe,8BAErD,IAAIgB,EAAoBpE,EAAKoE,kBAGzBoB,EADmBpB,EAAkBqB,iBACJxB,EAAUyB,QAE3CC,EAAqCC,WAAYxB,EAAkByB,cAAiBD,WAAYJ,GAEhGM,EAAoCH,EAAmCC,WAAYxB,EAAkB2B,OAEnG/F,EAAKyD,eACPzD,EAAKyD,aAAeY,SAASjB,cAAe,wBAEhD,IAAIK,EAAezD,EAAKyD,aAEpBuC,EAAuBJ,WAAYnC,EAAawC,wBAAwBC,MAExEC,EAAwBP,WAAYnC,EAAawC,wBAAwBG,OAE7EhC,EAAkBjF,MAAM+G,KAAOP,EAAmC,KAEO,IAArEK,EAAuBJ,WAAYxB,EAAkBjF,MAAM+G,MAC3D9B,EAAkBjF,MAAM+G,KAASF,EAAuB,GAAO,KACsD,IAA9GJ,WAAYxB,EAAkBjF,MAAM+G,MAASN,WAAYxB,EAAkB2B,OAAUI,IAC5F/B,EAAkBjF,MAAM+G,KAASC,EAAwBP,WAAYxB,EAAkB2B,OAAU,GAAO,MAG5G,IAAIrC,EAAQD,EAAaL,cAAe,SAGpCiD,EAAuB,GAC3B,GAA2B,EAFP3C,EAAMY,uBAAwB,sBAEhC5H,OAAa,CAC3B,GAAI0H,EAAkBkC,+BAAlB,MACI3H,SAAUyF,EAAkBkC,+BAAlB,KAAyD,GAAI,KAAQX,EAAmC,CACtH,IAAK,IAAIrE,EAAI,EAAGA,EAAIoC,EAAMpD,SAAS5D,OAAQ4E,IAAM,CAC7C+E,EAAqB/E,GAAK,GAI1B,IAFA,IACIiF,EADM7C,EAAMpD,SAASgB,GACMgD,uBAAwB,sBAC9CkC,EAAI,EAAGA,EAAID,EAAqB7J,OAAQ8J,IAC7CH,EAAqB/E,GAAGmF,KAAMF,EAAqBC,IAI3DxG,EAAK0G,mBAAoBtC,EAAkBkC,+BAAlB,KAAyD,IAElF,IAAK,IAAIhF,EAAI,EAAGA,EAAI+E,EAAqB3J,OAAQ4E,IAC7C,IAAM,IAAIkF,EAAI,EAAGA,EAAIH,EAAqB/E,GAAG5E,OAAQ8J,IACjD9C,EAAMpD,SAASgB,GAAGqF,YAAaN,EAAqB/E,GAAGkF,IAI/D,IAAK,IAAIlF,EAAI,EAAGA,EAAI+E,EAAqB3J,OAAQ4E,IAC7C,IAAK,IAAIkF,EAAI,EAAGA,EAAIH,EAAqB/E,GAAG5E,OAAQ8J,IAAM,CAGtD,IAFA,IACII,OAAO,EACFC,EAFazC,EAAkBkC,+BAAlB,KAAyD,GAEjDO,EAAIpD,EAAavG,WAC3C0J,EAAUlD,EAAMpD,SAASgB,GAAG8B,cAAe,kBAAoByD,EAAI,OADfA,KAKxDnD,EAAMpD,SAASgB,GAAGwF,aAAcT,EAAqB/E,GAAGkF,GACxDI,GAIRnD,EAAasD,qBAEb/G,EAAKgH,sBAEL5C,EAAkBkC,+BAAiCW,SAChD,GAAI7C,EAAkBkC,+BAAlB,OACH3H,SAAUyF,EAAkBkC,+BAAlB,MAA0D,GAAI,KAAQR,EAAoC,CACxH,IAAK,IAAIxE,EAAI,EAAGA,EAAIoC,EAAMpD,SAAS5D,OAAQ4E,IAAM,CAC7C+E,EAAqB/E,GAAK,GAI1B,IAFA,IACIiF,EADM7C,EAAMpD,SAASgB,GACMgD,uBAAwB,sBAC9CkC,EAAI,EAAGA,EAAID,EAAqB7J,OAAQ8J,IAC7CH,EAAqB/E,GAAGmF,KAAMF,EAAqBC,IAI3DxG,EAAK0G,mBAAoBtC,EAAkBkC,+BAAlB,MAA0D,GAAK,GAExF,IAAK,IAAIhF,EAAI,EAAGA,EAAI+E,EAAqB3J,OAAQ4E,IAC7C,IAAMkF,EAAI,EAAGA,EAAIH,EAAqB/E,GAAG5E,OAAQ8J,IAC7C9C,EAAMpD,SAASgB,GAAGqF,YAAaN,EAAqB/E,GAAGkF,IAI/D,IAAK,IAAIlF,EAAI,EAAGA,EAAI+E,EAAqB3J,OAAQ4E,IAC7C,IAAK,IAAIkF,EAAI,EAAGA,EAAIH,EAAqB/E,GAAG5E,OAAQ8J,IAAM,CAGtD,IAFA,IACII,OAAO,EACFC,EAFYzC,EAAkBkC,+BAAlB,MAA0D,GAEjD,EAAGO,EAAIpD,EAAavG,WAC9C0J,EAAUlD,EAAMpD,SAASgB,GAAG8B,cAAe,kBAAoByD,EAAI,OADZA,KAK3DnD,EAAMpD,SAASgB,GAAGwF,aAAcT,EAAqB/E,GAAGkF,GACxDI,GAIRnD,EAAasD,qBAEb/G,EAAKgH,sBAEL5C,EAAkBkC,+BAAiCW,IAGvDC,YAAYC,0BAA0B,uCAAwC1D,IAkJtF,SAASwD,EAAgCG,GACrC,IAAIxK,EAAQyH,SAASjB,cAAe,uBAChCiE,EAAOzK,EAAMwG,cAAc,qBAC3BkE,EAAUD,EAAK3G,QAEf4F,EAAiC,GAKrC,SAASiB,EAAmBH,EAAKI,GAC7B,GAAkB,GAAdJ,EAAMI,GAAaJ,EAAMI,GAAQ5K,EAAMM,QAAU,CAIjD,IAHA,IAEIuK,EAaAC,EACAC,EAhBAC,EAAehL,EAAMkC,iBAAkB,mBAAsBsI,EAAMI,GAAS,MAGvElG,EAAI,EAAGA,EAAIsG,EAAalL,OAAQ4E,IAAM,CAC3C,GAA+B,GAA3BsG,EAAatG,GAAGZ,QAAe,CAC/B+G,EAAcG,EAAatG,GAC3B,QAGEmG,GAAeG,EAAatG,GAAGZ,QAAU+G,EAAY/G,WAAU+G,EAAcG,GAGvF,OAAMH,GAKFD,EAAO,GACPE,GAAgC,EAAID,EAAYxB,wBAAwBC,KAAO,EAAIuB,EAAYxB,wBAAwBG,OAAU,GACjIuB,EAAUP,EAAM,GACD,EAAPI,IACRE,GAAgC,EAAID,EAAYxB,wBAAwBC,KAAO,EAAIuB,EAAYxB,wBAAwBG,OAAU,GACjIuB,EAAUP,EAAM,GAEb,CAACO,EAASD,IAXNH,EAAkBH,EAAMI,EAAMA,GAazC,OAAO,EAQf,OAvCIJ,EADEA,GACIzI,SAAU0I,EAAK7G,QAAQC,OAAQ,IAmCzC6F,EAA8B,KAAWiB,EAAkBH,GAAM,GAEjEd,EAA8B,MAAYiB,EAAkBH,EAAME,EAAU,EAAG,GAExEhB,EA5LXtG,EAAKoE,kBAAkByD,YAAc,SAAEC,GAEnC,IAAInE,EAAOU,SAAS5C,qBAAsB,QAAS,GAC/CsG,EAAqB1D,SAASjB,cAAe,0BAC7C2E,IACAA,EAAmBjD,sBACnBnB,EAAKgD,YAAaoB,IAGtB/H,EAAKoE,kBAAkBqB,iBAAmBqC,EAAUpC,QAE9C1F,EAAKwD,gBACPxD,EAAKwD,cAAgBxD,EAAKgI,oCAG9B,IAAIvE,EAAeY,SAASjB,cAAe,uBAErCpD,EAAKoE,oBACPpE,EAAKoE,kBAAoBC,SAASjB,cAAe,8BAEjDgB,EAAoBpE,EAAKoE,kBACzBA,KACIiB,EAA+BhB,SAASE,cAAe,QAC9BC,UAAUC,IAAK,wCAE5CY,EAA6BR,YAAa7E,EAAKwD,eAE/CY,EAAkBS,YAAaQ,GAE/BA,EAA6BlG,MAAM8I,SAAW,WAC9C5C,EAA6BlG,MAAM+I,IAAM,OACzC7C,EAA6BlG,MAAM4G,MAAQ,OAEvCtC,IACA4B,EAA6BlG,MAAMgJ,OAAS1E,EAAawC,wBAAwBkC,OAAS,MAG9FjB,YAAYC,0BAA0B,uCAAwC1D,IAGlFW,EAAkBkC,+BAAiCW,IAEnDtD,EAAKyE,YAAc,SAAEnE,GACjB,IAAIG,EAAoBC,SAASjB,cAAe,6BAE1CpD,EAAKqI,iBACPrI,EAAKqI,eAAiBhE,SAASC,uBAAwB,oBAAqB,IAEhF,IAAI+D,EAAiBrI,EAAKqI,eAGpBrI,EAAKsI,4BACPtI,EAAKsI,0BAA4BD,EAAepC,yBAEpD,IAKQsC,EALJD,EAA4BtI,EAAKsI,0BAErCE,cAAepE,EAAkBqE,uBAEhB,GADAH,EAA0BpC,KAAO9B,EAAkB6B,wBAAwBC,MACrEjC,EAAUyE,WAAa,GACtCH,EAAoB,EAClBnE,EAAkBuE,qBAGGvE,EAAkBwE,qBAAuB3E,EAAUyB,SAElD,IACpB6C,EAAoB,GALxBnE,EAAkBwE,qBAAuB3E,EAAUyB,QAQnD6C,GACmBlE,SAASjB,cAAe,uBAE3CpD,EAAKiE,UAAYA,EACjBG,EAAkBqE,sBAAwBI,YAAa,WACnDR,EAAeS,WAAalD,WAAYyC,EAAeS,YAAe,EAEtE1E,EAAkBkC,+BAAiCW,IACnD7B,EAAoBnB,IACrBsE,GAEHnE,EAAkBJ,YAAa,GAE/BwE,cAAepE,EAAkBqE,wBAEsD,GAApFrE,EAAkB6B,wBAAwBG,MAAQkC,EAA0BlC,OAAoC,EAAtBnC,EAAUyE,WACvGH,EAAoB,EAClBnE,EAAkBuE,qBAGG1E,EAAUyB,QAAUtB,EAAkBwE,sBAErC,IACpBL,EAAoB,GALxBnE,EAAkBwE,qBAAuB3E,EAAUyB,QAQnD6C,GACAnE,EAAkBqE,sBAAwBI,YAAa,WACnDR,EAAeS,WAAalD,WAAYyC,EAAeS,YAAe,EAEtE1E,EAAkBkC,+BAAiCW,IACnD7B,EAAoBnB,IACrBsE,GAEHnE,EAAkBJ,YAAa,GAE/BwE,cAAepE,EAAkBqE,wBAIrCD,cAAepE,EAAkBqE,uBAGjCrE,IACAT,EAAKoF,UAAY,WACb,IAAI3E,EAAoBC,SAASjB,cAAe,6BAC5CgB,IACAT,EAAKgD,YAAavC,GAElBpE,EAAKgJ,qBAELhJ,EAAKwD,cAAgB,MAGzBgF,cAAepE,EAAkBqE,uBAEjC9E,EAAKoF,UAAY,KACjBpF,EAAKyE,YAAc,KAEf3E,EAAeY,SAASjB,cAAe,uBAC3CK,EAAawF,aAEb/B,YAAYC,0BAA0B,uCAAwC1D,IAE9C,IAAIyF,4BACVC,iBAG9B/D,EAAoBnB,OA6DpCpH,KAAKqI,8BAAgC,WACjC,IAAId,EAAoBC,SAASjB,cAAe,6BAC5C6B,EAAkBZ,SAASjB,cAAe,qBAC1CgB,IAAuBA,EAAkBJ,YAAciB,IACnDmE,EAAyBnE,EAAgBgB,wBAC7CjG,EAAKoE,kBAAkBjF,MAAM+G,KAAON,WAAYwD,EAAuBlD,MAAS,KAChFlG,EAAKoE,kBAAkByB,aAAeD,WAAYwD,EAAuBlD,MACzElG,EAAKoE,kBAAkB2B,MAAQH,WAAYwD,EAAuBrD,SAK1ElJ,KAAKmI,8BAAgC,WACjChF,EAAKkF,gCACL,IAYQmD,EAZJpD,EAAkBZ,SAASC,uBAAwB,oBAC1B,EAAzBW,EAAgBvI,SAGZ0M,GAFJnE,EAAkBA,EAAgB,IAEWgB,wBAC7CoD,EAA8BzD,WAAYwD,EAAuBrD,OAEjE/F,EAAKoE,kBAAkBjF,MAAMoG,QAAU,QACvCvF,EAAKoE,kBAAkBjF,MAAM4G,MAAQsD,EAA8B,KAGvC,GADxBhB,EAAiBhE,SAASC,uBAAwB,qBACnC5H,SAGX4M,GAFJjB,EAAiBA,EAAe,IAEapC,wBAC7CjG,EAAKoE,kBAAkBjF,MAAM+I,IAAMtC,WAAY0D,EAAwBpB,KAAQ,GAAK,KACpFlI,EAAKoE,kBAAkBhB,cAAe,iCAAkCjE,MAAM+I,IAAQtC,WAAY0D,EAAwBnB,QAAW,GAAO,KAG3G,GAD7BoB,EAAsBvJ,EAAKoE,kBAAkBE,uBAAwB,qBACjD5H,UACpB6M,EAAsBA,EAAoB,IAEtBpK,MAAMqK,UAAYnB,EAAepC,wBAAwBkC,OAAS,SAMtGtL,KAAK4M,sBAAwB,WACzB,IAAIxE,EAAkBZ,SAASjB,cAAe,qBAC1CsG,EAAO,EACPC,EAAad,YAAY,WACzB,IAAIO,EAAyBnE,EAAgBgB,wBAC7CjG,EAAKoE,kBAAkBjF,MAAM+G,KAAON,WAAYwD,EAAuBlD,MAAS,KAChFlG,EAAKoE,kBAAkByB,aAAeD,WAAYwD,EAAuBlD,MAC/D,IAAPwD,GAAYlB,cAAcmB,GAC7BD,GAAO,GACR,IA0BP7M,KAAKsI,iBAAmB,WACpB,IAAIyE,EAAcvF,SAASC,uBAAwB,oBAC/CX,EAAOU,SAAS5C,qBAAsB,QAAS,GACzB,GAAtBmI,EAAYlN,SACR6G,EAAiBc,SAASjB,cAAe,4BAE5BG,EAAesG,WACrBlD,YAAapD,GAG5BI,EAAKoB,oBAAqB,QAAS/E,EAAKmF,kBAAkB,IAI9DtI,KAAKiN,mBAAqB,WACtB,IAAIvG,EAAiBc,SAASC,uBAAwB,yBAC1B,EAAxBf,EAAe7G,UACf6G,EAAiBA,EAAe,IACjBpE,MAAMoG,QAAU,SAIvC1I,KAAKmL,iCAAmC,WAC9BnL,KAAK4G,eACP5G,KAAK4G,aAAeY,SAASjB,cAAe,wBAEhD,IAAIxG,EAAQC,KAAK4G,aACb4D,EAAOhD,SAASjB,cAAc,qBAClC,GAAGxG,GAASyK,EAAM,CACd,IAAIC,EAAUD,EAAK3G,QACf0G,EAAMzI,SAAU0I,EAAK7G,QAAQC,OAAQ,IACrCsJ,EAAuB1F,SAASE,cAAe,SAC/CyF,EAA4B3F,SAASE,cAAe,SAExDwF,EAAqBlF,YAAamF,GAClCD,EAAqBvF,UAAUC,IAAK,sBAGpC,IADA,IAAIwF,EAAoBlL,mBAAOnC,EAAM0H,uBAAwB,8BACpDhD,EAAI,EAAGA,EAAI2I,EAAqBvN,OAAQ4E,IAC7C2I,EAAqB3I,GAAGkD,UAAU0F,OAAQ,6BAC1CD,EAAqB3I,GAAG6I,gBAAiB,6BAK7C,IAFA,IAAIC,EAAkBxN,EAAMyN,WAEnB/I,EAAI,EAAGA,EAAI8I,EAAgB1N,OAAQ4E,IACxCyI,EAAqBhH,aAAcqH,EAAgB9I,GAAGgJ,SAAUF,EAAgB9I,GAAGiJ,WAGvFR,EAAqB5K,MAAMqL,SAAW,GACtCT,EAAqB5K,MAAM4G,MAAQ,OAElBuB,EAAVA,GAAoB,EAE3BzK,KAAK6J,mBAAoBU,GAEzBvK,KAAK6J,mBAAoBU,EAAME,GAG/B,IADA,IAAImD,EAA8B,GACzBnJ,EAAI,EAAGA,EAAI1E,EAAM+C,KAAKjD,OAAQ4E,IAAM,CACzC,IAAIoJ,EAAc9N,EAAM+C,KAAK2B,GAAGhB,SAC5BqK,EAA2B/N,EAAM+C,KAAK2B,GAAG2E,wBAAwBkC,OACjEyC,EAAqBb,EAAqBc,WAAY,GAC1DD,EAAmBpG,UAAUC,IAAK,YAClCmG,EAAmBzL,MAAMgJ,OAASwC,EAA2B,KAC7DF,EAA4BnJ,GAAK,GACjC,IAAK,IAAIkF,EAAI,EAAGA,EAAIkE,EAAYhO,OAAQ8J,IACpC,KAAKkE,EAAYlE,GAAGhG,QAAQC,OAAS2G,GAArC,CACA,GAAKsD,EAAYlE,GAAGhG,QAAQC,QAAU2G,EAAME,EAAU,MAEtDoD,EAAYlE,GAAGhG,QAAQsK,sBAAwBJ,EAAYlE,GAAG1D,aAAa,SAE3E4H,EAAYlE,GAAGhC,UAAUC,IAAK,6BAE9BgG,EAA4BnJ,GAAGmF,KAAMiE,EAAYlE,IAEjD,IAAIuE,EAAQL,EAAYlE,GAAG5B,WAAW,GAWtCgG,EAAmB/F,YAAYkG,GAE/BL,EAAYlE,GAAGrH,MAAMoD,gBAAkB,UACvCmI,EAAYlE,GAAGhC,UAAUC,IAAK,sBAEmB,GAA7C9F,SAAU+L,EAAYlE,GAAGhG,QAAQwK,SACjCN,EAAYlE,GAAGhC,UAAUC,IAAK,6BAE9B9F,SAAU+L,EAAYlE,GAAGhG,QAAQwK,QAAWN,EAAYlE,GAAGrF,SAAWvE,EAAM+C,KAAKjD,QACjFgO,EAAYlE,GAAGhC,UAAUC,IAAK,gCAE9B9F,SAAU+L,EAAYlE,GAAGhG,QAAQC,SAAY2G,GAC7CsD,EAAYlE,GAAGhC,UAAUC,IAAK,8BAE9B9F,SAAU+L,EAAYlE,GAAGhG,QAAQC,QAAWiK,EAAYlE,GAAG9F,SAAW0G,EAAME,GAC5EoD,EAAYlE,GAAGhC,UAAUC,IAAK,gCAQ1C,IAHA,IAAIwG,EAAmB7I,OAAOC,iBAAkBgF,EAAM,MAClD6D,EAAcD,EAAiB3I,iBAAkB,gBACjD6I,EAAeF,EAAiB3I,iBAAkB,iBAC7ChB,EAAI,EAAGA,EAAImJ,EAA4B/N,OAAQ4E,IACpD,IAAK,IAAIkF,EAAI,EAAGA,EAAIiE,EAA4BnJ,GAAG5E,OAAQ8J,IACvDiE,EAA4BnJ,GAAGkF,GAAGhG,QAAQ4K,kBAAoBzM,SAAU8L,EAA4BnJ,GAAGkF,GAAGP,wBAAwBF,OAC9HpH,SAAUA,SAAUuM,IAAkBvM,SAAUA,SAAUwM,IAC1DxM,SAAU0I,EAAKlI,MAAMc,aAAc,EAAI,GAAGwK,EAA4BnJ,GAAG5E,OAKrF,IADA,IAcQgH,EAdJ2H,EAAuBzO,EAAMkC,iBAAiB,+BACzCwC,EAAI,EAAGA,EAAI+J,EAAqB3O,OAAQ4E,IAC7C+J,EAAqB/J,GAAGnC,MAAM4G,MAAQsF,EAAqB/J,GAAGd,QAAQ4K,kBAAoB,KAwB9F,MArBiD,aAA9CrB,EAAqB5K,MAAMmM,iBAEtBC,EAAY,QADZC,EAAUzB,EAAqB5K,MAAMwC,iBAGjC8J,EAAaD,EAAQ5J,MAAM,OACd8J,MAAMC,QAAQF,KAC3BF,EAAYE,EAAW,GAAGG,QAIhB,GADdlI,EAAQqG,EAAqBtI,qBAAqB,UAC7C/E,UACLgH,EAAQA,EAAM,IAERvE,MAAM8I,SAAW,WACvBvE,EAAMvE,MAAM+G,KAAO,IAAMqF,EACzB7H,EAAMvE,MAAMiH,MAAQ,IAAMmF,EAC1B7H,EAAMvE,MAAM+I,IAAM,MAClBxE,EAAMvE,MAAM0M,OAAS,QAItB9B,EAEP,OAAO,GAIflN,KAAK6J,mBAAqB,SAAUU,GAC1BvK,KAAK4G,eACP5G,KAAK4G,aAAeY,SAASjB,cAAe,wBAEhD,IAAIxG,EAAQC,KAAK4G,aACjB2D,EAAMzI,SAAUyI,EAAK,IAErB0E,kBAAkBpF,mBAAmBU,EAAKxK,IAG9CC,KAAKmK,oBAAsB,WACjBnK,KAAK4G,eACP5G,KAAK4G,aAAeY,SAASjB,cAAe,wBAEhD,IAAIxG,EAAQC,KAAK4G,aACjBqI,kBAAkB9E,oBAAoBpK,IAG1CC,KAAKmM,mBAAqB,SAAU+C,GAC1BlP,KAAK4G,eACP5G,KAAK4G,aAAeY,SAASjB,cAAe,wBAEhD,IAAIxG,EAAQC,KAAK4G,aACjB,GAAI7G,EAAQ,CAER,IADA,IAAIoP,EAAgBjN,mBAAOnC,EAAM0H,uBAAwB,uBAChDhD,EAAI,EAAGA,EAAI0K,EAAiBtP,OAAQ4E,IACzC0K,EAAiB1K,GAAGkD,UAAU0F,OAAQ,sBACtC8B,EAAiB1K,GAAGnC,MAAMoD,gBAAkB,GACxCyJ,EAAiB1K,GAAG2K,aAAc,mCAClCD,EAAiB1K,GAAGyB,aAAa,QAASiJ,EAAiB1K,GAAGd,QAAQsK,uBACtEkB,EAAiB1K,GAAG6I,gBAAiB,mCAErC6B,EAAiB1K,GAAGnC,MAAM4G,MAAQ,GAEtCiG,EAAiB1K,GAAG6I,gBAAiB,6BACrC6B,EAAiB1K,GAAGkD,UAAU0F,OAAQ,6BAEtC8B,EAAiB1K,GAAGkD,UAAU0F,OAAQ,6BACtC8B,EAAiB1K,GAAGkD,UAAU0F,OAAQ,gCACtC8B,EAAiB1K,GAAGkD,UAAU0F,OAAQ,8BACtC8B,EAAiB1K,GAAGkD,UAAU0F,OAAQ,+BAK1C,GAFArN,KAAKmK,uBAEC+E,EAAgB,CAElB,IADA,IAAInC,EAAW7K,mBAAOnC,EAAM0H,uBAAwB,qBAC1ChD,EAAI,EAAGA,EAAIsI,EAAYlN,OAAQ4E,IACrCsI,EAAYtI,GAAGkD,UAAU0F,OAAQ,oBAIrC,IADA,IAAIrL,EAAGE,mBAAOnC,EAAM6E,qBAAsB,OACjCH,EAAI,EAAGA,EAAIzC,EAAInC,OAAQ4E,IACxBzC,EAAIyC,GAAG2K,aAAc,mCACrBpN,EAAIyC,GAAG6I,gBAAiB,qCAO5C/H,OAAO8J,eAAiBrP,M,k+BCvrB5B,IAAIsP,aAAe,WAAY,IAAAnM,EAAAnD,KAC3BA,KAAK0G,eAEL1G,KAAK2G,cAEL3G,KAAK4G,aAEL5G,KAAK6G,MAEL7G,KAAK8G,KAEL9G,KAAK+G,uBAEL/G,KAAKgH,sBAELhH,KAAKiH,cAELjH,KAAKkH,oBAELlH,KAAKmH,YAAa,EAElBnH,KAAKoH,UAILpH,KAAKuP,wBAA0B,WAC3B,IAQQjI,EARJZ,EAAiBc,SAASC,uBAAwB,yBAClDX,EAAOU,SAAS5C,qBAAsB,QAAS,GACnDzB,EAAK2D,KAAOA,EACgB,EAAxBJ,EAAe7G,OACfsD,EAAKuD,eAAiBA,EAAe,KAErCA,EAAiBc,SAASE,cAAe,QAC1BC,UAAUC,IAAK,0BAC1BN,EAAkBE,SAASE,cAAe,QAC9BC,UAAUC,IAAK,yBAC/BN,EAAgBO,UAAY,msCAYxB2H,EAAsBlI,EAAgBS,WAAW,IAEjCJ,UAAUC,IAAK,8BAEnClB,EAAesB,YAAaV,GAC5BZ,EAAesB,YAAawH,GAE5B1I,EAAKkB,YAAatB,GAElBvD,EAAKuD,eAAiBA,GAE1BA,EAAeuB,oBAAsB,WACbT,SAASC,uBAAwB,kBAAmB,GAC1DS,oBAAqB,SAAU/E,EAAKsM,4BAA4B,GAC9ElK,OAAO2C,oBAAqB,SAAU/E,EAAKuM,4BAA4B,IAIrEvM,EAAK8D,gBACP9D,EAAK8D,cAAgBO,SAASC,uBAAwB,kBAAmB,IAE7E,IAAIR,EAAgB9D,EAAK8D,cAErBmB,EAAkBZ,SAASC,uBAAwB,oBAC1B,EAAzBW,EAAgBvI,SAChBuI,EAAkBA,EAAgB,GAElCjF,EAAKsM,6BACLtM,EAAKuM,8BAGTzI,EAAc9F,iBAAkB,SAAUgC,EAAKsM,4BAA4B,GAC3ElK,OAAOpE,iBAAkB,SAAUgC,EAAKuM,4BAA4B,GACpE5I,EAAK3F,iBAAkB,QAASgC,EAAKmF,kBAAkB,GAGhC,SAAnBqH,EAAqBvI,GACfjE,EAAKsF,yBACPtF,EAAKsF,uBAAyBjB,SAASjB,cAAe,uCAE7BpD,EAAKsF,uBAEXnG,MAAMoG,QAAU,QAEjCvF,EAAKuD,iBACPvD,EAAKuD,eAAiBc,SAASjB,cAAe,2BAElD,IAAIG,EAAiBvD,EAAKuD,eAGtBkJ,EADmBlJ,EAAemJ,iBACDzI,EAAU0I,QAE3CC,EAAiChH,WAAYrC,EAAesJ,aAAgBjH,WAAY6G,GAExFK,EAAkCF,EAA+BhH,WAAYrC,EAAe4E,QAE1FnI,EAAKyD,eACPzD,EAAKyD,aAAeY,SAASjB,cAAe,wBAEhD,IAAIK,EAAezD,EAAKyD,aAEpBsJ,EAAsBnH,WAAYnC,EAAawC,wBAAwBiC,KAEvE8E,EAAyBpH,WAAYnC,EAAawC,wBAAwB4F,QAE9EtI,EAAepE,MAAM+I,IAAM0E,EAA+B,KAEU,IAAhEG,EAAsBnH,WAAYrC,EAAepE,MAAM+I,KACvD3E,EAAepE,MAAM+I,IAAQ6E,EAAsB,GAAO,KACsD,IAAzGnH,WAAYrC,EAAepE,MAAM+I,KAAQtC,WAAYrC,EAAe4E,QAAW6E,IACtFzJ,EAAepE,MAAM+I,IAAQ8E,EAAyBpH,WAAYrC,EAAe4E,QAAW,GAAO,MAGvG,IAAIzE,EAAQD,EAAaL,cAAe,SAEpC6J,EAAavJ,EAAMY,uBAAwB,mBAC3C4I,EAAoB,GACxB,GAAwB,EAApBD,EAAWvQ,OAAa,CACxB,GAAI6G,EAAe4J,4BAAf,KACIxO,SAAU4E,EAAe4J,4BAAf,IAAkD,GAAI,KAAQP,EAA+B,CAC3G,IAAK,IAAItL,EAAI,EAAGA,EAAI2L,EAAWvQ,OAAQ4E,IACnC4L,EAAkBzG,KAAMwG,EAAW3L,IAGvC,IAAK,IAAIA,EAAI,EAAGA,EAAI4L,EAAkBxQ,OAAQ4E,IAC1CoC,EAAMiD,YAAauG,EAAkB5L,IAGzC8L,QAAQC,IAAK9J,EAAe4J,4BAAf,IAAkD,IAE/DnN,EAAKsN,qBAAsB/J,EAAe4J,4BAAf,IAAkD,IAE7E,IAAK,IAAI7L,EAAI,EAAGA,EAAI4L,EAAkBxQ,OAAQ4E,IAC1CoC,EAAMoD,aAAcoG,EAAkB5L,GAAImC,EAAa9D,KAAK4D,EAAe4J,4BAAf,IAAkD,GAAK7L,IAGvHmC,EAAasD,qBAETtD,EAAa9D,KAAK4D,EAAe4J,4BAAf,IAAkD,GAAK,IAAM1J,EAAa9D,KAAK4D,EAAe4J,4BAAf,IAAkD,GAAK,IACxJnN,EAAKuN,sBAAuB9J,EAAa9D,KAAK4D,EAAe4J,4BAAf,IAAkD,GAAK,GACjG1J,EAAa9D,KAAK4D,EAAe4J,4BAAf,IAAkD,GAAK,IAGjF5J,EAAe4J,4BAA8BK,SAC1C,GAAIjK,EAAe4J,4BAAf,QACHxO,SAAU4E,EAAe4J,4BAAf,OAAqD,GAAI,KAAQL,EAAkC,CACjH,IAAK,IAAIxL,EAAI,EAAGA,EAAI2L,EAAWvQ,OAAQ4E,IACnC4L,EAAkBzG,KAAMwG,EAAW3L,IAGvC,IAAK,IAAIA,EAAI,EAAGA,EAAI4L,EAAkBxQ,OAAQ4E,IAC1CoC,EAAMiD,YAAauG,EAAkB5L,IAGzCtB,EAAKsN,qBAAsB/J,EAAe4J,4BAAf,OAAqD,GAAKD,EAAkBxQ,QAEvG,IAAK,IAAI4E,EAAI,EAAGA,EAAI4L,EAAkBxQ,OAAQ4E,IAC1CoC,EAAMoD,aAAcoG,EAAkB5L,GAAImC,EAAa9D,KAAK4D,EAAe4J,4BAAf,OAAqD,GAAKD,EAAkBxQ,OAAS4E,IAGrJmC,EAAasD,qBAETtD,EAAa9D,KAAK4D,EAAe4J,4BAAf,OAAqD,GAAK,IAAM1J,EAAa9D,KAAK4D,EAAe4J,4BAAf,OAAqD,GAAK,IAC9JnN,EAAKuN,sBAAuB9J,EAAa9D,KAAK4D,EAAe4J,4BAAf,OAAqD,GAAK,GACpG1J,EAAa9D,KAAK4D,EAAe4J,4BAAf,OAAqD,GAAK,IAGpF5J,EAAe4J,4BAA8BK,IAGjDtG,YAAYC,0BAA0B,uCAAwC1D,IAmJtF,SAAS+J,EAA6B7M,GAClC,IAAI/D,EAAQyH,SAASjB,cAAe,uBAChCiE,EAAOzK,EAAMwG,cAAc,qBAC3BqK,EAAUpG,EAAKlG,QAEfgM,EAA8B,GAgBlC,OAdIxM,EADEA,GACIhC,SAAU0I,EAAK7G,QAAQwK,OAAQ,IAGrCpO,EAAM+C,KAAKgB,EAAM,KACb+M,GAAmB,EAAI9Q,EAAM+C,KAAKgB,EAAM,GAAGsF,wBAAwBiC,IAC/D,EAAItL,EAAM+C,KAAKgB,EAAM,GAAGsF,wBAAwB4F,QAAW,GACnEsB,EAA2B,IAAU,CAACxM,EAAM,EAAG+M,IAG/C9Q,EAAM+C,KAAKgB,EAAM8M,KACbE,GAAsB,EAAI/Q,EAAM+C,KAAKgB,EAAM8M,GAASxH,wBAAwBiC,IAAM,EAAItL,EAAM+C,KAAKgB,EAAM8M,GAASxH,wBAAwB4F,QAAW,GACvJsB,EAA2B,OAAa,CAACxM,EAAM8M,EAAU,EAAGE,IAGzDR,EApKXnN,EAAKuD,eAAesE,YAAc,SAAEC,GAEhC,IAAInE,EAAOU,SAAS5C,qBAAsB,QAAS,GAC/CmM,EAAwBvJ,SAASjB,cAAe,6BAChDwK,IACAA,EAAsB9I,sBACtBnB,EAAKgD,YAAaiH,IAGtB5N,EAAKuD,eAAemJ,iBAAmB5E,EAAU6E,QAE3C3M,EAAKwD,gBACPxD,EAAKwD,cAAgBxD,EAAK6N,iCAG9B,IAAIpK,EAAeY,SAASjB,cAAe,uBAErCpD,EAAKuD,iBACPvD,EAAKuD,eAAiBc,SAASjB,cAAe,2BAE9CG,EAAiBvD,EAAKuD,eACtBA,KACI+B,EAAyBjB,SAASE,cAAe,QAC9BC,UAAUC,IAAK,qCAEtCa,EAAuBT,YAAa7E,EAAKwD,eAEzCD,EAAesB,YAAaS,GAE5BA,EAAuBnG,MAAM8I,SAAW,WACxC3C,EAAuBnG,MAAMiH,MAAQ,OACrCd,EAAuBnG,MAAMgJ,OAAS,OAElC1E,IACA6B,EAAuBnG,MAAM4G,MAAQtC,EAAawC,wBAAwBF,MAAQ,KAClFT,EAAuBnG,MAAM2O,SAAWrK,EAAaoG,WAAW5D,wBAAwBF,MAAQ,KAChGT,EAAuBnG,MAAM4O,SAAW,UACpCvK,EAAgB8B,EAAuBlC,cAAe,0BAEtDI,EAAcrE,MAAM6O,YAAevK,EAAaoG,WAAWf,WAAa,QAKpFvF,EAAe4J,4BAA8BK,IAE7C7J,EAAKyE,YAAc,SAAEnE,GACjB,IAAIV,EAAiBc,SAASjB,cAAe,0BAEvCpD,EAAK6D,wBACP7D,EAAK6D,sBAAwBF,EAAKP,cAAe,gBAAiB6C,yBAEtE,IAAIpC,EAAwB7D,EAAK6D,sBAE3B7D,EAAK8D,gBACP9D,EAAK8D,cAAgBO,SAASC,uBAAwB,kBAAmB,IAE7E,IA6BQiE,EA7BJzE,EAAgB9D,EAAK8D,cAEzB0E,cAAejF,EAAe0K,sBAEb,GADApK,EAAsBgI,OAAStI,EAAe0C,wBAAwBiC,KAChEjE,EAAUiK,WAAa,GACtC3F,EAAoB,EAClBhF,EAAeoF,qBAGMpF,EAAeoF,qBAAuB1E,EAAU0I,SAE/C,IACpBpE,EAAoB,GALxBhF,EAAeoF,qBAAuB1E,EAAU0I,QAQhDpE,GACAvI,EAAKiE,UAAYA,EACjBV,EAAe0K,qBAAuBpF,YAAa,WAC/C/E,EAAcqK,UAAYvI,WAAY9B,EAAcqK,WAAc,EAElE5K,EAAe4J,4BAA8BK,IAC7ChB,EAAkBvI,IACnBsE,GAEHhF,EAAeS,YAAa,GAE5BwE,cAAejF,EAAe0K,uBAE2D,GAAtF1K,EAAe0C,wBAAwB4F,OAASlI,EAAKsC,wBAAwB4F,QAAqC,EAAtB5H,EAAUiK,WACzG3F,EAAoB,EAClBhF,EAAeoF,qBAGM1E,EAAU0I,QAAUpJ,EAAeoF,sBAElC,IACpBJ,EAAoB,GALxBhF,EAAeoF,qBAAuB1E,EAAU0I,QAQhDpE,GACAhF,EAAe0K,qBAAuBpF,YAAa,WAC/C/E,EAAcqK,UAAYvI,WAAY9B,EAAcqK,WAAc,EAElE5K,EAAe4J,4BAA8BK,IAC7ChB,EAAkBvI,IACnBsE,GAEHhF,EAAeS,YAAa,GAE5BwE,cAAejF,EAAe0K,uBAIlCzF,cAAejF,EAAe0K,sBAG9B1K,IACAI,EAAKoF,UAAY,WACb,IAAIxF,EAAiBc,SAASjB,cAAe,0BACzCG,IACAI,EAAKgD,YAAapD,GAElBvD,EAAKoO,kBAELpO,EAAKwD,cAAgB,MAGzBgF,cAAejF,EAAe0K,sBAE9BtK,EAAKoF,UAAY,KACjBpF,EAAKyE,YAAc,KAEf3E,EAAeY,SAASjB,cAAe,uBAC3CK,EAAawF,aAEb/B,YAAYC,0BAA0B,uCAAwC1D,IAE9C,IAAIyF,4BACVC,iBAG9BqD,EAAkBvI,OAoClCpH,KAAKyP,2BAA6B,WAC9B,IAAI/I,EAAiBc,SAASjB,cAAe,0BACzC6B,EAAkBZ,SAASjB,cAAe,qBAC1CG,IAAoBA,EAAeS,YAAciB,IAC7CmE,EAAyBnE,EAAgBgB,wBAC7CjG,EAAKuD,eAAepE,MAAM+I,IAAMtC,WAAYwD,EAAuBlB,KAAQ,KAC3ElI,EAAKuD,eAAesJ,YAAcjH,WAAYwD,EAAuBlB,KACrElI,EAAKuD,eAAe4E,OAASvC,WAAYwD,EAAuBjB,UAKxEtL,KAAK0P,2BAA6B,WAE9B,IAYQlE,EAZJpD,EAAkBZ,SAASC,uBAAwB,oBAC1B,EAAzBW,EAAgBvI,SAGZ0M,GAFJnE,EAAkBA,EAAgB,IAEWgB,wBAC7CoI,EAA+BzI,WAAYwD,EAAuBjB,QAElEnI,EAAKuD,eAAepE,MAAMoG,QAAU,QACpCvF,EAAKuD,eAAepE,MAAMgJ,OAASkG,EAA+B,KAGtC,GADxBhG,EAAiBhE,SAASC,uBAAwB,qBACnC5H,SAGX4M,GAFJjB,EAAiBA,EAAe,IAEapC,wBAC7CjG,EAAKuD,eAAepE,MAAM+G,KAAON,WAAY0D,EAAwBlD,OAAU,KAC/EpG,EAAKuD,eAAeH,cAAe,+BAAgCjE,MAAM+G,KAAO,KAAQN,WAAY0D,EAAwBvD,OAAU,IAAO,KAG9G,GAD3BuI,EAAoBtO,EAAKuD,eAAee,uBAAwB,qBAC9C5H,UAClB4R,EAAoBA,EAAkB,IAEpBnP,MAAM2O,SAAWzF,EAAepC,wBAAwBF,MAAQ,SAMlGlJ,KAAK4M,sBAAwB,WACzB,IAAIpB,EAAiBhE,SAASjB,cAAc,qBACxCsG,EAAO,EACPC,EAAad,YAAY,WACzB,IAAIS,EAA0BjB,EAAepC,wBAC7CjG,EAAKuD,eAAepE,MAAM+G,KAAON,WAAY0D,EAAwBlD,OAAU,KACrE,IAAPsD,GAAYlB,cAAcmB,GAC7BD,GAAO,GACR,IA0BP7M,KAAKsI,iBAAmB,WACpB,IAAIyE,EAAcvF,SAASC,uBAAwB,oBAC/CX,EAAOU,SAAS5C,qBAAsB,QAAS,GACzB,GAAtBmI,EAAYlN,SACZ6G,eAAiBc,SAASjB,cAAe,0BACrCG,gBACaA,eAAesG,WACrBlD,YAAapD,iBAG5BI,EAAKoB,oBAAqB,QAAS/E,EAAKmF,kBAAkB,IAI9DtI,KAAKiN,mBAAqB,WACtB,IAAIvG,EAAiBc,SAASC,uBAAwB,yBAC1B,EAAxBf,EAAe7G,UACf6G,EAAiBA,EAAe,IACjBpE,MAAMoG,QAAU,SAIvC1I,KAAKgR,8BAAgC,WAC3BhR,KAAK4G,eACP5G,KAAK4G,aAAeY,SAASjB,cAAe,wBAEhD,IAAIxG,EAAQC,KAAK4G,aACb4D,EAAOhD,SAASjB,cAAc,qBAC9BqK,EAAUpG,EAAKlG,QACfR,EAAMhC,SAAU0I,EAAK7G,QAAQwK,OAAQ,IACrCsD,EAAoBjK,SAASE,cAAe,SAC5CgK,EAAyBlK,SAASE,cAAe,SAIjD,GAHA+J,EAAkBzJ,YAAa0J,GAC/BD,EAAkB9J,UAAUC,IAAK,sBAE7B7H,EAGA,IAFA,IAAIwN,EAAkBxN,EAAMyN,WAEnB/I,EAAI,EAAGA,EAAI8I,EAAgB1N,OAAQ4E,IACxCgN,EAAkBvL,aAAcqH,EAAgB9I,GAAGgJ,SAAUF,EAAgB9I,GAAGiJ,WAI3EkD,EAAVA,GAAoB,EAE3B5Q,KAAKyQ,qBAAsB3M,GAE3B9D,KAAKyQ,qBAAsB3M,EAAM8M,GAGjC,IADA,IAAIe,EAAuB,GAClBlN,EAAIX,EAAKW,EAAIX,EAAM8M,EAASnM,IAAM,CACvCkN,EAAqB/H,KAAM7J,EAAM+C,KAAK2B,IACtC,IAAIX,EAAM/D,EAAM+C,KAAK2B,GACjBmN,EAAc9N,EAAIiE,WAAU,GACnBjE,EAAIL,SACCmO,EAAYnO,SAY9BiO,EAAuB1J,YAAa4J,GAGhC7R,EAAM+C,KAAK2B,GAAGnC,MAAMgJ,OADpB7G,GAAKX,GAAOW,GAAKX,EAAM8M,EAAU,EACJ9O,SAAU/B,EAAM+C,KAAK2B,GAAG2E,wBAAwBkC,QAAWxJ,SAAU0I,EAAKlI,MAAMc,aAAc,EAAI,GAAK,KAEvGtB,SAAU/B,EAAM+C,KAAK2B,GAAG2E,wBAAwBkC,QAAWxJ,SAAU0I,EAAKlI,MAAMc,aAAc,EAAI,KAInI,IADA,IAAIyO,EAAgB9R,EAAM+C,KAAK2B,GAAGhB,SACzBkG,EAAI,EAAGA,EAAIkI,EAAchS,OAAQ8J,IACa,GAA/C7H,SAAU+P,EAAclI,GAAGhG,QAAQwK,SACnC0D,EAAclI,GAAGhC,UAAUC,IAAK,6BAEhC9F,SAAU+P,EAAclI,GAAGhG,QAAQwK,QAAW0D,EAAclI,GAAGrF,SAAWR,EAAM8M,GAChFiB,EAAclI,GAAGhC,UAAUC,IAAK,gCAEe,GAA/C9F,SAAU+P,EAAclI,GAAGhG,QAAQC,SACnCiO,EAAclI,GAAGhC,UAAUC,IAAK,8BAEhC9F,SAAU+P,EAAclI,GAAGhG,QAAQC,QAAWiO,EAAclI,GAAG9F,SAAWgO,EAAchS,QACxFgS,EAAclI,GAAGhC,UAAUC,IAAK,+BAIxC7H,EAAM+C,KAAK2B,GAAGkD,UAAUC,IAAK,mBAGjC,IAAIkK,EAASL,EAAkBzD,WAAW,GAC1C8D,EAAOnK,UAAUC,IAAK,YACtBkK,EAAOxP,MAAMoG,QAAU,OACvB,IAAK,IAQGqJ,EAYAlL,EApBCpC,EAAI,EAAGA,EAAI1E,EAAMM,QAASoE,IAAM,CACrC,IAAIpC,EAAK,IAAI2P,UAAWjS,EAAMkS,MAC9B5P,EAAG6P,gBAAgBvO,QAAQwO,mBAAqB,OAChDV,EAAkB3O,KAAK2O,EAAkB3O,KAAKjD,OAAS,GAAGmI,YAAa3F,EAAG6P,iBA6B9E,MA1B8C,aAA3CT,EAAkBnP,MAAMmM,iBAEnBsD,EAAS,QADTpD,EAAU8C,EAAkBnP,MAAMwC,iBAG9B8J,EAAaD,EAAQ5J,MAAM,OACd8J,MAAMC,QAAQF,KAC3BmD,EAASnD,EAAW,GAAGG,OAEnBgD,GADD,KAAKnD,GAAcA,EAAW,GACpBA,EAAW,GAEXA,EAAW,IAFGG,QAOjB,GADdlI,EAAQ4K,EAAkB7M,qBAAqB,UAC1C/E,UACLgH,EAAQA,EAAM,IAERvE,MAAM8I,SAAW,WACvBvE,EAAMvE,MAAM+I,IAAM,IAAM0G,EACxBlL,EAAMvE,MAAM0M,OAAS,IAAM+C,EAC3BlL,EAAMvE,MAAM+G,KAAO,MACnBxC,EAAMvE,MAAMiH,MAAQ,QAIrBkI,GAGXzR,KAAKyQ,qBAAuB,SAAU2B,GAC5BpS,KAAK4G,eACP5G,KAAK4G,aAAeY,SAASjB,cAAe,wBAEhD,IAAIxG,EAAQC,KAAK4G,aACjBwL,EAAYtQ,SAAUsQ,EAAW,IAEjCnD,kBAAkBwB,qBAAqB2B,EAAWrS,IAGtDC,KAAK0Q,sBAAwB,WACnB1Q,KAAK4G,eACP5G,KAAK4G,aAAeY,SAASjB,cAAe,wBAEhD,IAAIxG,EAAQC,KAAK4G,aAEjBqI,kBAAkByB,sBAAsB3Q,IAG5CC,KAAKuR,gBAAkB,SAAUrC,GACvBlP,KAAK4G,eACP5G,KAAK4G,aAAeY,SAASjB,cAAe,wBAEhD,IAAIxG,EAAQC,KAAK4G,aACjB,GAAI7G,EAAQ,CAER,IADA,IAAI+C,EAAO/C,EAAM+C,KACR2B,EAAI,EAAGA,EAAI3B,EAAKjD,OAAQ4E,IAC7B,GAAI3B,EAAK2B,GAAGkD,UAAU0K,SAAU,mBAAsB,CAGlD,IAFA,IAAI5O,EAAWX,EAAK2B,GAAGhB,SAEdkG,EAAI,EAAGA,EAAIlG,EAAS5D,OAAQ8J,IACjClG,EAASkG,GAAGhC,UAAU0F,OAAQ,6BAC9B5J,EAASkG,GAAGhC,UAAU0F,OAAQ,gCAC9B5J,EAASkG,GAAGhC,UAAU0F,OAAQ,8BAC9B5J,EAASkG,GAAGhC,UAAU0F,OAAQ,+BAGlCvK,EAAK2B,GAAGnC,MAAMgJ,OAAS,GACvBxI,EAAK2B,GAAGkD,UAAU0F,OAAQ,mBAMlC,GAFArN,KAAK0Q,yBAECxB,EAAgB,CAElB,IADA,IAAInC,EAAW7K,mBAAOnC,EAAM0H,uBAAwB,qBAC1ChD,EAAI,EAAGA,EAAIsI,EAAYlN,OAAQ4E,IACrCsI,EAAYtI,GAAGkD,UAAU0F,OAAQ,oBAIrC,IADA,IAAIrL,EAAGE,mBAAOnC,EAAM6E,qBAAsB,OACjCH,EAAI,EAAGA,EAAIzC,EAAInC,OAAQ4E,IACxBzC,EAAIyC,GAAG2K,aAAc,mCACrBpN,EAAIyC,GAAG6I,gBAAiB,qCAO5C/H,OAAO+M,YAActS,MChnBrBQ,qBAAuB,SAAUT,GACjCC,KAAKD,MAAQA,EACb,IAAMwS,EAAyB,sBAE/BvS,KAAKwS,cAAgB,WACjB,IAAMC,EAAyBzS,KAAKD,MAAM4D,QAAQ4O,GAClD,YAA+BzS,IAA3B2S,GAGOC,KAAKC,MAAMC,KAAKH,KAI/BzS,KAAK6S,eAAiB,WAClB,IACMJ,EADFzS,KAAKO,kBACHkS,EAAyBK,KAAKJ,KAAKK,UAAU/S,KAAKO,kBACxDP,KAAKD,MAAM4D,QAAQ4O,GAA0BE,IAGjDzS,KAAKe,aAAe,SAAUiS,GAC1BhT,KAAKO,gBAAkBP,KAAKwS,gBACxBxS,KAAKO,kBAAiBP,KAAKO,gBAAkB,IAGjD,IAFA,IACIsB,EADAoR,EAAQjT,KAAKO,gBAETkE,EAAI,EAAGA,EAAIuO,EAAInT,OAAQ4E,IAAK,CAChC,IAAIwO,EAAM/R,eAAe8R,EAAIvO,IAAK,CAC9B5C,GAAQ,EACR,MAEA,GAAG4C,IAAMuO,EAAInT,OAAS,EAAG,CACrBgC,EAAQoR,EAAMD,EAAIvO,IAClB,MAEJwO,EAAQA,EAAMD,EAAIvO,IAI1B,OAAO5C,GAGX7B,KAAKmC,aAAe,SAAU6Q,EAAKnR,GAC/B7B,KAAKO,gBAAkBP,KAAKwS,gBACxBxS,KAAKO,kBAAiBP,KAAKO,gBAAkB,IAEjD,IADA,IAAI0S,EAAQjT,KAAKO,gBACTkE,EAAI,EAAGA,EAAIuO,EAAInT,OAAQ4E,IAAK,CAEhC,GAAGA,IAAMuO,EAAInT,OAAS,EAAG,CACrBoT,EAAMD,EAAIvO,IAAM5C,EAChB7B,KAAK6S,iBACL,MAEAI,EAAM/R,eAAe8R,EAAIvO,MACzBwO,EAAMD,EAAIvO,IAAM,IAGpBwO,EAAQA,EAAMD,EAAIvO,MAI1BzE,KAAKO,gBAAkBP,KAAKwS","file":"admin.js","sourcesContent":["var WPTB_BordersManage = function (options = {}) {\n    let table = options.table;\n    this.table = options.table;\n    WPTB_RecalculateIndexes(table);\n    const thisObject = this;\n    this.itemsPerHeader = 0;\n    this.tableMaxCols = table.maxCols;\n    this.cellsStylesScheme = {};\n\n    const tableDirectives = new WPTB_TableDirectives(table);\n\n    /**\n     * checks whether the table should be in the sort state\n     * and connects the necessary handlers\n     *\n     * @param {object} responsiveFront\n     */\n    this.bordersInitialization = function(responsiveFront) {\n        let typeFirst;\n        let typeSecond;\n        let borderRadiusVal;\n        if(tableDirectives.getDirective(['innerBorders', 'active']) === 'row') {\n            typeFirst = 'row';\n            typeSecond = 'column';\n        } else if(tableDirectives.getDirective(['innerBorders', 'active']) === 'column') {\n            typeFirst = 'column';\n            typeSecond = 'row';\n        }\n        if(tableDirectives.getDirective(['innerBorders', 'borderRadiuses']))\n            borderRadiusVal = tableDirectives.getDirective(['innerBorders', 'borderRadiuses', tableDirectives.getDirective(['innerBorders', 'active'])]);\n        if(!typeFirst || typeof typeFirst !== 'string' || !typeSecond || typeof typeSecond !== 'string') return;\n\n        let switchMode = WPTB_GetDirectionAfterReconstruction(this.table, typeFirst, typeSecond, 'column', responsiveFront);\n\n        if(typeof switchMode === 'object' && switchMode.hasOwnProperty('switch')) {\n            function borderRadiusesSetRun (e) {\n                let switchModeObj = switchMode.switch(e);\n                if(typeof switchModeObj === 'object') {\n                    this.itemsPerHeader = switchModeObj.itemsPerHeader;\n                    if(switchModeObj.hasOwnProperty('newTable')) {\n                        let tableOld = this.table;\n                        this.table = switchModeObj.newTable;\n                        this.switchBorderOnlyColumnRow(switchModeObj.type[0]);\n                        this.borderRadiusesSet(switchModeObj.type[0], borderRadiusVal);\n                        this.spaceBorderSpacingExchange(switchModeObj.type[1]);\n                        this.table = tableOld;\n                    } else {\n                        this.switchBorderOnlyColumnRow(switchModeObj.type[0]);\n                        this.borderRadiusesSet(switchModeObj.type[0], borderRadiusVal);\n                        this.spaceBorderSpacingExchange(switchModeObj.type[1]);\n                    }\n                }\n            }\n            //borderRadiusesSetRun.call(thisObject);\n            this.table.addEventListener(\n                'table:rebuilt',\n                function (e) {\n                    borderRadiusesSetRun.call(thisObject, e);\n                },\n                false\n            );\n        }\n    }\n\n    /**\n     * sets border Radiuses for necessary Cells\n     *\n     * @param {string} type\n     * @param {string} value\n     */\n    this.borderRadiusesSet = function (type, value) {\n        if(!parseInt(value, 10)){\n            value = null;\n        }\n        let tds = this.table.querySelectorAll('td');\n        tds = [...tds];\n        if(type === 'all') {\n            tableDirectives.setDirective(['innerBorders', 'borderRadiuses', 'all'], value);\n            if(value) {\n                value = value + 'px';\n            }\n            tds.map(td => {\n                td.style.borderRadius = value;\n            })\n        } else if(type === 'row') {\n            tableDirectives.setDirective(['innerBorders', 'borderRadiuses', 'row'], value);\n            tds.map(td => {\n                td.style.borderRadius = null;\n            })\n            if(value) {\n                let tds1 = this.table.querySelectorAll('tr td:first-child');\n                tds1 = [...tds1];\n                tds1.map(td => {\n                    td.style.borderTopLeftRadius = value + 'px';\n                    td.style.borderBottomLeftRadius = value + 'px';\n                })\n\n                let tds2 = this.table.querySelectorAll('tr td:last-child');\n                tds2 = [...tds2];\n                tds2.map(td => {\n                    td.style.borderTopRightRadius = value + 'px';\n                    td.style.borderBottomRightRadius = value + 'px';\n                })\n            }\n        } else if(type === 'column') {\n            tableDirectives.setDirective(['innerBorders', 'borderRadiuses', 'column'], value);\n            tds.map(td => {\n                td.style.borderRadius = null;\n            })\n            if(value) {\n                let rowsLength = this.table.rows.length;\n                let dataYIndexStart = 0;\n                while (rowsLength > 0) {\n                    let tdsTop = this.table.querySelectorAll(`[data-y-index=\"${dataYIndexStart}\"]`);\n                    tdsTop = [...tdsTop];\n                    tdsTop.map((td) => {\n                        td.style.borderTopLeftRadius = value + 'px';\n                        td.style.borderTopRightRadius = value + 'px';\n                    });\n\n                    let tdsBottom;\n                    if(this.itemsPerHeader && dataYIndexStart + this.itemsPerHeader < rowsLength && dataYIndexStart + 1 < rowsLength) {\n                        tdsBottom = this.table.querySelectorAll(`[data-y-index=\"${dataYIndexStart + this.itemsPerHeader}\"]`);\n                    } else {\n                        tdsBottom = this.table.querySelectorAll('tr:last-child td');\n                    }\n\n                    tdsBottom = [...tdsBottom];\n                    tdsBottom.map((td) => {\n                        td.style.borderBottomLeftRadius = value + 'px';\n                        td.style.borderBottomRightRadius = value + 'px';\n                    });\n\n                    if (this.itemsPerHeader) {\n                        rowsLength -= this.itemsPerHeader + 1;\n                        dataYIndexStart += this.itemsPerHeader + 1;\n                    } else {\n                        rowsLength = 0;\n                    }\n                }\n            }\n        }\n    };\n\n    this.switchBorderOnlyColumnRow = function (type) {\n        let borderWidth = tableDirectives.getDirective(['innerBorders', 'borderWidth']);\n        this.innerBordersSet(borderWidth);\n\n        if (type === 'row') {\n            let tableRows = this.table.rows;\n            let columnCount = 0;\n            if (tableRows.length > 0) {\n                let firstRow = tableRows[0];\n                let firstRowTds = firstRow.children;\n                firstRowTds = [...firstRowTds];\n                let firstRowTdLast = firstRowTds[firstRowTds.length - 1]\n                columnCount = parseInt(firstRowTdLast.dataset.xIndex) + firstRowTdLast.colSpan;\n            }\n\n            tableRows = [...tableRows];\n\n            tableRows.map(row => {\n                let tds = row.children;\n                tds = [...tds];\n                tds.map(td => {\n                    if(td.previousSibling === null) {\n                        if (td.colSpan < columnCount) {\n                            td.style.borderRightWidth = '0px';\n                        }\n                    } else if(td.nextSibling === null) {\n                        td.style.borderLeftWidth = '0px';\n                    } else {\n                        td.style.borderRightWidth = '0px';\n                        td.style.borderLeftWidth = '0px';\n                    }\n                });\n            });\n            tableDirectives.setDirective(['innerBorders', 'active'], 'row');\n        } else if (type === 'column') {\n            let tableRows = this.table.rows;\n            let rowsCount = tableRows.length;\n            if (rowsCount <= 1) return;\n\n            let rowsLength = this.table.rows.length;\n            let dataYIndexStart = 0;\n            while (rowsLength > 0) {\n                let tdsTop = this.table.querySelectorAll(`[data-y-index=\"${dataYIndexStart}\"]`);\n                tdsTop = [...tdsTop];\n                tdsTop.map((td) => {\n                    if (td.rowSpan < rowsCount) {\n                        td.style.borderBottomWidth = '0px';\n                    }\n                });\n\n                let tdsBetween = [];\n                let tdsBottom;\n                if(this.itemsPerHeader && dataYIndexStart + this.itemsPerHeader < rowsLength && dataYIndexStart + 1 < rowsLength) {\n                    for(let i = dataYIndexStart + 1; i < dataYIndexStart + this.itemsPerHeader; i++) {\n                        let tdsRow = this.table.querySelectorAll(`[data-y-index=\"${i}\"]`);\n                        tdsRow = [...tdsRow];\n                        tdsBetween = tdsBetween.concat(tdsRow);\n                    }\n\n                    tdsBottom = this.table.querySelectorAll(`[data-y-index=\"${dataYIndexStart + this.itemsPerHeader}\"]`);\n                } else {\n                    for(let i = dataYIndexStart + 1; i < this.table.rows.length - 1; i++) {\n                        let tdsRow = this.table.querySelectorAll(`[data-y-index=\"${i}\"]`);\n                        tdsRow = [...tdsRow];\n                        tdsBetween = tdsBetween.concat(tdsRow);\n                    }\n\n                    tdsBottom = this.table.querySelectorAll('tr:last-child td');\n                }\n\n                tdsBetween.map(td => {\n                    td.style.borderTopWidth = '0px';\n                    td.style.borderBottomWidth = '0px';\n                })\n\n                tdsBottom = [...tdsBottom];\n                tdsBottom.map((td) => {\n                    td.style.borderTopWidth = '0px';\n                });\n\n                if (this.itemsPerHeader) {\n                    rowsLength -= this.itemsPerHeader + 1;\n                    dataYIndexStart += this.itemsPerHeader + 1;\n                } else {\n                    rowsLength = 0;\n                }\n            }\n\n            tableDirectives.setDirective(['innerBorders', 'active'], 'column');\n        } else if (type == 'all') {\n            tableDirectives.setDirective(['innerBorders', 'active'], 'all');\n        }\n    }\n\n    this.innerBordersSet = function (value) {\n        let tds = this.table.getElementsByTagName('td');\n        tds = [...tds];\n        tds.map(td => {\n            td.style.borderWidth = value + 'px';\n        });\n\n        tableDirectives.setDirective(['innerBorders', 'borderWidth'], value);\n        tableDirectives.setDirective(['innerBorders', 'active'], 'all');\n    }\n\n    this.spaceBorderSpacingExchange = function (typeNumber) {\n        if(this.table.style.borderSpacing) {\n            if((typeNumber === 2 && !tableDirectives.getDirective(['innerBorders', 'borderSpacing', 'exchangeNum'])) ||\n                (typeof tableDirectives.getDirective(['innerBorders', 'borderSpacing', 'exchangeNum']) === 'number' &&\n                    tableDirectives.getDirective(['innerBorders', 'borderSpacing', 'exchangeNum']) !== typeNumber)){\n                this.table.style.borderSpacing = this.table.style.borderSpacing.split(' ').reverse().join(' ');\n                tableDirectives.setDirective(['innerBorders', 'borderSpacing', 'exchangeNum'], typeNumber);\n            }\n        }\n    }\n\n    this.rowBgColorReplaceToCellBgColor = function (color) {\n        let borderRadiusVal = tableDirectives.getDirective(['innerBorders', 'borderRadiuses', tableDirectives.getDirective(['innerBorders', 'active'])]);\n        let type;\n        if(borderRadiusVal > 0) {\n            type = true;\n        } else {\n            type = false;\n        }\n        // if(type && this.table.dataset.rowsBgColorSetToCells && !color) {\n        //     return;\n        // } else if(type) {\n        //     this.table.dataset.rowsBgColorSetToCells = '1';\n        // } else if(this.table.dataset.rowsBgColorSetToCells){\n        //     delete this.table.dataset.rowsBgColorSetToCells;\n        // } else {\n        //     return;\n        // }\n        let trs = this.table.querySelectorAll('tr');\n\n        for (let i = 0; i < trs.length; i++) {\n            let tr = trs[i];\n            if(!tr) continue;\n            // @deprecated\n            // let tds = tr.querySelectorAll('td');\n\n            let rowBgColor;\n            if(!tr.dataset.wptbBgColor) {\n                let trStyles = window.getComputedStyle(tr, null);\n                rowBgColor = trStyles.getPropertyValue('background-color');\n                // @deprecated in favor of background menu\n                // tr.dataset.wptbBgColor = rowBgColor;\n            } else {\n                rowBgColor = tr.dataset.wptbBgColor;\n            }\n            if(type === true) {\n                tr.style.backgroundColor = '#ffffff00';\n            } else {\n                tr.style.backgroundColor = tr.dataset.wptbBgColor ? tr.dataset.wptbBgColor : null;\n            }\n\n            // @deprecated\n            // for(let j = 0; j < tds.length; j++) {\n            //     let td = tds[j];\n            //     if(type === true) {\n            //         if(!td.dataset.wptbOwnBgColor) {\n            //             td.style.backgroundColor = rowBgColor;\n            //             td.dataset.wptbBgColorFromRow = rowBgColor;\n            //         }\n            //     } else {\n            //         if(!td.dataset.wptbOwnBgColor) {\n            //             td.style.backgroundColor = null;\n            //             delete td.dataset.wptbBgColorFromRow;\n            //         }\n            //     }\n            // }\n        }\n    }\n\n    this.changeRowBgColor = function (tblRow, selector) {\n        const bgColor = selector.dataset.wptbRowBgColor;\n        const orgColor = tblRow.getAttribute('org-bg-color');\n\n        if (bgColor) {\n            // @deprecated in favor of background menu\n            // tblRow.dataset.wptbBgColor = bgColor;\n\n            if (orgColor) tblRow.setAttribute('org-bg-color', bgColor);\n            else tblRow.style.backgroundColor = bgColor;\n        }\n    }\n    \n    this.changeColumnBgColor = function (selector) {\n        const index = parseInt(selector.dataset.xIndex) + 1;\n        const bgColor = selector.dataset.wptbColumnBgColor;\n        const trs = this.table.querySelectorAll('tr');\n\n        trs.forEach(tr => {\n            let td = tr.querySelector(`td:nth-child(${index})`);\n            \n            if (!td.dataset.wptbOwnBgColor) td.style.backgroundColor = bgColor;\n        });\n    }\n}\n","var WPTB_ColumnMove = function () {\n    this.rowMovingField;\n\n    this.withdrawTable;\n\n    this.tablePreview;\n\n    this.tBody;\n\n    this.body;\n\n    this.setTimeoutWhenStopMove;\n\n    this.wptbHeaderCoordinates;\n\n    this.wptbContainer;\n\n    this.setTimeoutScrollTop;\n\n    this.autoScroll = false;\n\n    this.eventMove;\n\n    // function creates a field for move a column to left or right\n    // and after creating puts it on the right place\n    this.columnMovingFieldPutActive = () => {\n        let columnMovingField = document.getElementsByClassName( 'wptb-column-moving-field' );\n        let body = document.getElementsByTagName( 'body' )[0];\n        this.body = body;\n        if( columnMovingField.length > 0 ) {\n            this.columnMovingField = columnMovingField[0];\n        } else {\n            columnMovingField = document.createElement( 'div' );\n            columnMovingField.classList.add( 'wptb-column-moving-field' );\n            let visualButtonBox = document.createElement( 'div' );\n            visualButtonBox.classList.add( 'column-visual-button-box' );\n            visualButtonBox.innerHTML = '<svg version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" \\n\\\n                    x=\"0px\" y=\"0px\" width=\"30\" height=\"30\" viewBox=\"0 0 511.626 511.627\" \\n\\\n                    style=\"enable-background:new 0 0 511.626 511.627;\" xml:space=\"preserve\">\\n\\\n                    <path d=\"M506.203,242.966l-73.087-73.089c-3.621-3.617-7.902-5.424-12.847-5.424c-4.949,0-9.233,1.807-12.854,5.424\\n\\\n                       c-3.613,3.616-5.42,7.898-5.42,12.847v36.547H109.636v-36.547c0-4.949-1.809-9.231-5.426-12.847   \\n\\\n                    c-3.619-3.617-7.902-5.424-12.85-5.424c-4.947,0-9.23,1.807-12.847,5.424L5.424,242.966C1.809,246.58,0,250.865,0,255.813   \\n\\\n                    c0,4.947,1.809,9.232,5.424,12.845l73.089,73.091c3.617,3.613,7.897,5.424,12.847,5.424c4.952,0,9.234-1.811,12.85-5.424   \\n\\\n                    c3.617-3.614,5.426-7.898,5.426-12.847v-36.549h292.359v36.549c0,4.948,1.807,9.232,5.42,12.847   \\n\\\n                    c3.621,3.613,7.905,5.424,12.854,5.424c4.944,0,9.226-1.811,12.847-5.424l73.087-73.091c3.617-3.613,5.424-7.898,5.424-12.845   \\n\\\n                    C511.626,250.865,509.82,246.58,506.203,242.966z\" style=\"fill:#FFFFFF\"></path></svg>';\n\n            let visualButtonBoxBottom = visualButtonBox.cloneNode( true );\n\n            visualButtonBoxBottom.classList.add( 'column-visual-button-box-top' );\n\n            columnMovingField.appendChild( visualButtonBox );\n            columnMovingField.appendChild( visualButtonBoxBottom );\n\n            body.appendChild( columnMovingField );\n\n            this.columnMovingField = columnMovingField;\n        }\n        columnMovingField.deleteEventHandlers = () => {\n            let wptbContainer = document.getElementsByClassName( 'wptb-container' )[0];\n            wptbContainer.removeEventListener( 'scroll', this.columnMovingFieldParametrsTwo, false );\n            window.removeEventListener( 'resize', this.columnMovingFieldParametrsTwo, false );\n            //document.querySelector( '.wptb-panel-drawer-icon' ).removeEventListener( 'click', this.movingfieldTransition, false );\n        }\n\n        if( ! this.wptbContainer ) {\n            this.wptbContainer = document.getElementsByClassName( 'wptb-container' )[0];\n        }\n        let wptbContainer = this.wptbContainer;\n\n        let wptbHighlighted = document.getElementsByClassName( 'wptb-highlighted' );\n        if( wptbHighlighted.length > 0 ) {\n            wptbHighlighted = wptbHighlighted[0];\n\n            this.columnMovingFieldParametrsOne();\n            this.columnMovingFieldParametrsTwo();\n        }\n\n        wptbContainer.addEventListener( 'scroll', this.columnMovingFieldParametrsTwo, false );\n        window.addEventListener( 'resize', this.columnMovingFieldParametrsTwo, false );\n        body.addEventListener( 'click', this.checkHighlighted, false );\n        //document.querySelector( '.wptb-panel-drawer-icon' ).addEventListener( 'click', this.movingfieldTransition, false );\n\n        let insertColumnMoving = ( eventMove ) => {\n            if( ! this.withdrawColumnTableContainer ) {\n                this.withdrawTableContainer = document.querySelector( '.wptb-withdraw-column-table-container' );\n            }\n            let withdrawTableContainer = this.withdrawTableContainer;\n\n            withdrawTableContainer.style.display = 'block';\n\n            if( ! this.columnMovingField ) {\n                this.columnMovingField = document.querySelector( '.wptb-column-moving-field' );\n            }\n            let columnMovingField = this.columnMovingField;\n\n            let downXcoordinates = columnMovingField.downXcoordinates;\n            let differenceX = downXcoordinates - eventMove.clientX;\n\n            let columnMovingFieldLeftCoordinates = ( parseFloat( columnMovingField.positionLeft ) - parseFloat( differenceX ) );\n\n            let ColumnMovingFieldRightCoordinates = columnMovingFieldLeftCoordinates + parseFloat( columnMovingField.width );\n\n            if( ! this.tablePreview ) {\n                this.tablePreview = document.querySelector( '.wptb-preview-table' );\n            }\n            let tablePreview = this.tablePreview;\n\n            let tableCoordinatesLeft = parseFloat( tablePreview.getBoundingClientRect().left );\n\n            let tableCoordinatesRight = parseFloat( tablePreview.getBoundingClientRect().right );\n\n            columnMovingField.style.left = columnMovingFieldLeftCoordinates + 'px';\n\n            if( tableCoordinatesLeft - parseFloat( columnMovingField.style.left ) >= 20 ) {\n                columnMovingField.style.left = ( tableCoordinatesLeft - 20 ) + 'px';\n            } else if( parseFloat( columnMovingField.style.left ) + parseFloat( columnMovingField.width ) - tableCoordinatesRight >= 20 )  {\n                columnMovingField.style.left = ( tableCoordinatesRight - parseFloat( columnMovingField.width ) + 20 ) + 'px';\n            }\n\n            let tBody = tablePreview.querySelector( 'tbody' );\n\n            let columnsMoving = tBody.getElementsByClassName( 'wptb-column-moving' );\n            let columnsMovingDeleted = [];\n            if( columnsMoving.length > 0 ) {\n                if( columnMovingField.columnsLeftRightCoordinatesArr['left'] &&\n                        parseInt( columnMovingField.columnsLeftRightCoordinatesArr['left'][1], 10 ) >= columnMovingFieldLeftCoordinates ) {\n                    for( let i = 0; i < tBody.children.length; i++ ) {\n                        columnsMovingDeleted[i] = [];\n\n                        let row = tBody.children[i];\n                        let columnsMovingThisRow = row.getElementsByClassName( 'wptb-column-moving' );\n                        for( let j = 0; j < columnsMovingThisRow.length; j++ ) {\n                            columnsMovingDeleted[i].push( columnsMovingThisRow[j] );\n                        }\n                    }\n\n                    this.cutTableVertically( columnMovingField.columnsLeftRightCoordinatesArr['left'][0] );\n\n                    for( let i = 0; i < columnsMovingDeleted.length; i++ ) {\n                        for ( let j = 0; j < columnsMovingDeleted[i].length; j++ ) {\n                            tBody.children[i].removeChild( columnsMovingDeleted[i][j] );\n                        }\n                    }\n\n                    for( let i = 0; i < columnsMovingDeleted.length; i++ ) {\n                        for( let j = 0; j < columnsMovingDeleted[i].length; j++ ) {\n                            let columnNumBefore = columnMovingField.columnsLeftRightCoordinatesArr['left'][0];\n                            let afterTd;\n                            for( let k = columnNumBefore; k < tablePreview.maxCols; k++ ) {\n                                afterTd = tBody.children[i].querySelector( '[data-x-index=\"' + k + '\"]' );\n                                if( afterTd ) break;\n                            }\n\n                            tBody.children[i].insertBefore( columnsMovingDeleted[i][j],\n                            afterTd );\n                        }\n                    }\n\n                    tablePreview.recalculateIndexes();\n\n                    this.glueTableVertically();\n\n                    columnMovingField.columnsLeftRightCoordinatesArr = setColumnsLeftRightCoordinates();\n                } else if( columnMovingField.columnsLeftRightCoordinatesArr['right'] &&\n                        parseInt( columnMovingField.columnsLeftRightCoordinatesArr['right'][1], 10 ) <= ColumnMovingFieldRightCoordinates ) {\n                    for( let i = 0; i < tBody.children.length; i++ ) {\n                        columnsMovingDeleted[i] = [];\n\n                        let row = tBody.children[i];\n                        let columnsMovingThisRow = row.getElementsByClassName( 'wptb-column-moving' );\n                        for( let j = 0; j < columnsMovingThisRow.length; j++ ) {\n                            columnsMovingDeleted[i].push( columnsMovingThisRow[j] );\n                        }\n                    }\n\n                    this.cutTableVertically( columnMovingField.columnsLeftRightCoordinatesArr['right'][0] + 1 );\n\n                    for( let i = 0; i < columnsMovingDeleted.length; i++ ) {\n                        for ( j = 0; j < columnsMovingDeleted[i].length; j++ ) {\n                            tBody.children[i].removeChild( columnsMovingDeleted[i][j] );\n                        }\n                    }\n\n                    for( let i = 0; i < columnsMovingDeleted.length; i++ ) {\n                        for( let j = 0; j < columnsMovingDeleted[i].length; j++ ) {\n                            let columnNumAfter = columnMovingField.columnsLeftRightCoordinatesArr['right'][0];\n                            let afterTd;\n                            for( let k = columnNumAfter + 1; k < tablePreview.maxCols; k++ ) {\n                                afterTd = tBody.children[i].querySelector( '[data-x-index=\"' + k + '\"]' );\n                                if( afterTd ) break;\n                            }\n\n                            tBody.children[i].insertBefore( columnsMovingDeleted[i][j],\n                            afterTd );\n                        }\n                    }\n\n                    tablePreview.recalculateIndexes();\n\n                    this.glueTableVertically();\n\n                    columnMovingField.columnsLeftRightCoordinatesArr = setColumnsLeftRightCoordinates();\n                }\n\n                WPTB_Helper.wptbDocumentEventGenerate('wp-table-builder/table-changed/after', tablePreview);\n            }\n        }\n        // sets handler for the event when the moving field was moved\n        this.columnMovingField.onmousedown = ( eventDown ) => {\n            // delete row moving field and delete all its handlers\n            let body = document.getElementsByTagName( 'body' )[0];\n            let wptbRowMovingField = document.querySelector( '.wptb-row-moving-field' );\n            if( wptbRowMovingField ) {\n                wptbRowMovingField.deleteEventHandlers();\n                body.removeChild( wptbRowMovingField );\n            }\n\n            this.columnMovingField.downXcoordinates = eventDown.clientX;\n\n            if( ! this.withdrawTable ) {\n                this.withdrawTable = this.withdrawSelectedColumnsFromTable();\n            }\n\n            let tablePreview = document.querySelector( '.wptb-preview-table' );\n\n            if( ! this.columnMovingField ) {\n                this.columnMovingField = document.querySelector( '.wptb-column-moving-field' );\n            }\n            let columnMovingField = this.columnMovingField;\n            if( columnMovingField ) {\n                let withdrawColumnTableContainer = document.createElement( 'div' );\n                withdrawColumnTableContainer.classList.add( 'wptb-withdraw-column-table-container' );\n\n                withdrawColumnTableContainer.appendChild( this.withdrawTable );\n\n                columnMovingField.appendChild( withdrawColumnTableContainer );\n\n                withdrawColumnTableContainer.style.position = 'absolute';\n                withdrawColumnTableContainer.style.top = '30px';\n                withdrawColumnTableContainer.style.width = '100%';\n\n                if( tablePreview ) {\n                    withdrawColumnTableContainer.style.height = tablePreview.getBoundingClientRect().height + 'px';\n                }\n\n                WPTB_Helper.wptbDocumentEventGenerate('wp-table-builder/table-changed/after', tablePreview);\n            }\n\n            columnMovingField.columnsLeftRightCoordinatesArr = setColumnsLeftRightCoordinates();\n\n            body.onmousemove = ( eventMove ) => {\n                let columnMovingField = document.querySelector( '.wptb-column-moving-field' );\n\n                if( ! this.wptbTableSetup ) {\n                    this.wptbTableSetup = document.getElementsByClassName( 'wptb-table-setup' )[0];\n                }\n                let wptbTableSetup = this.wptbTableSetup;\n\n\n                if( ! this.wptbTableSetupCoordinates ) {\n                    this.wptbTableSetupCoordinates = wptbTableSetup.getBoundingClientRect();\n                }\n                let wptbTableSetupCoordinates = this.wptbTableSetupCoordinates;\n\n                clearInterval( columnMovingField.setIntervalScrollLeft );\n                let difference = wptbTableSetupCoordinates.left - columnMovingField.getBoundingClientRect().left;\n                if( difference > 10 && eventMove.movementX <= 0 ) {\n                    let setIntervalPeriod = 2;\n                    if( ! columnMovingField.startScrollPositionY ) {\n                        columnMovingField.startScrollPositionX = eventMove.clientX;\n                    } else {\n                        let cursorDifference = columnMovingField.startScrollPositionX - eventMove.clientX;\n\n                        if( cursorDifference <= 0 ) {\n                            setIntervalPeriod = 0;\n                        }\n                    }\n                    if( setIntervalPeriod ) {\n                        let tablePreview = document.querySelector( '.wptb-preview-table' );\n\n                        this.eventMove = eventMove;\n                        columnMovingField.setIntervalScrollLeft = setInterval( function() {\n                            wptbTableSetup.scrollLeft = parseFloat( wptbTableSetup.scrollLeft ) - 5;\n\n                            columnMovingField.columnsLeftRightCoordinatesArr = setColumnsLeftRightCoordinates();\n                            insertColumnMoving( eventMove );\n                        }, setIntervalPeriod );\n\n                        columnMovingField.autoScroll = true;\n                    } else {\n                        clearInterval( columnMovingField.setIntervalScrollLeft );\n                    }\n                } else if( columnMovingField.getBoundingClientRect().right - wptbTableSetupCoordinates.right > 10 && eventMove.movementX > 0 ) {\n                    let setIntervalPeriod = 2;\n                    if( ! columnMovingField.startScrollPositionY ) {\n                        columnMovingField.startScrollPositionX = eventMove.clientX;\n                    } else {\n                        let cursorDifference = eventMove.clientX - columnMovingField.startScrollPositionX;\n\n                        if( cursorDifference <= 0 ) {\n                            setIntervalPeriod = 0;\n                        }\n                    }\n                    if( setIntervalPeriod ) {\n                        columnMovingField.setIntervalScrollLeft = setInterval( function() {\n                            wptbTableSetup.scrollLeft = parseFloat( wptbTableSetup.scrollLeft ) + 5;\n\n                            columnMovingField.columnsLeftRightCoordinatesArr = setColumnsLeftRightCoordinates();\n                            insertColumnMoving( eventMove );\n                        }, setIntervalPeriod );\n\n                        columnMovingField.autoScroll = true;\n                    } else {\n                        clearInterval( columnMovingField.setIntervalScrollLeft );\n                    }\n\n                } else {\n                    clearInterval( columnMovingField.setIntervalScrollLeft );\n                }\n\n                if( columnMovingField ) {\n                    body.onmouseup = () => {\n                        let columnMovingField = document.querySelector( '.wptb-column-moving-field' );\n                        if( columnMovingField ) {\n                            body.removeChild( columnMovingField );\n\n                            this.withdrewColumnsPut();\n\n                            this.withdrawTable = null;\n                        }\n\n                        clearInterval( columnMovingField.setIntervalScrollLeft );\n\n                        body.onmouseup = null;\n                        body.onmousemove = null;\n\n                        let tablePreview = document.querySelector( '.wptb-preview-table' );\n                        tablePreview.undoSelect();\n\n                        WPTB_Helper.wptbDocumentEventGenerate('wp-table-builder/table-changed/after', tablePreview);\n\n                        let wptbTableStateSaveManager = new WPTB_TableStateSaveManager();\n                        wptbTableStateSaveManager.tableStateSet();\n                    }\n\n                    insertColumnMoving( eventMove );\n                }\n            }\n        }\n\n        function setColumnsLeftRightCoordinates( col ) {\n            let table = document.querySelector( '.wptb-preview-table' );\n            let cell = table.querySelector('.wptb-highlighted'),\n                colspan = cell.colSpan;\n\n            let columnsLeftRightCoordinatesArr = [];\n            if( ! col ) {\n                col = parseInt( cell.dataset.xIndex, 10 );\n            }\n\n            function getNecessaryCell ( col, step ) {\n                if( col + step >= 0 && col + step <= table.maxCols ) {\n                    let tdsNecessary = table.querySelectorAll( '[data-x-index=\"' + ( col + step ) + '\"]' );\n\n                    let tdNecessary;\n                    for( let i = 0; i < tdsNecessary.length; i++ ) {\n                        if( tdsNecessary[i].colSpan == 1 ) {\n                            tdNecessary = tdsNecessary[i];\n                            break;\n                        }\n\n                        if( ! tdNecessary || tdsNecessary[i].colSpan < tdNecessary.colSpan ) tdNecessary = tdsNecessary;\n                    }\n\n                    if( ! tdNecessary ) {\n                        return getNecessaryCell( col + step, step );\n                    }\n                    let tdNecessaryBorderCoordinate;\n                    let thisCol;\n                    if( step < 0 ) {\n                        tdNecessaryBorderCoordinate = ( 7 * tdNecessary.getBoundingClientRect().left + 3 * tdNecessary.getBoundingClientRect().right ) / 10;\n                        thisCol = col - 1;\n                    } else if ( step > 0 ) {\n                        tdNecessaryBorderCoordinate = ( 3 * tdNecessary.getBoundingClientRect().left + 7 * tdNecessary.getBoundingClientRect().right ) / 10;\n                        thisCol = col + 1;\n                    }\n                    return [thisCol, tdNecessaryBorderCoordinate];\n                } else {\n                    return false;\n                }\n            }\n\n            columnsLeftRightCoordinatesArr['left'] = getNecessaryCell( col, -1 );\n\n            columnsLeftRightCoordinatesArr['right'] = getNecessaryCell( col + colspan - 1, 1 );\n\n            return columnsLeftRightCoordinatesArr;\n        }\n\n        // returns difference of positions of moving field before and after moving when this field was moved\n        function cursorPositionDifference( eventMove, body, rowMovingField ) {\n\n        }\n    }\n\n    // function set coordinates top and write property positionTop for moving field\n    this.columnMovingFieldParametrsOne = () => {\n        let columnMovingField = document.querySelector( '.wptb-column-moving-field' );\n        let wptbHighlighted = document.querySelector( '.wptb-highlighted' );\n        if( columnMovingField && ! columnMovingField.autoScroll && wptbHighlighted ) {\n            let coordinatesHighlighted = wptbHighlighted.getBoundingClientRect();\n            this.columnMovingField.style.left = parseFloat( coordinatesHighlighted.left ) + 'px';\n            this.columnMovingField.positionLeft = parseFloat( coordinatesHighlighted.left );\n            this.columnMovingField.width = parseFloat( coordinatesHighlighted.width );\n        }\n    }\n\n    // function set position left and top for moving field\n    this.columnMovingFieldParametrsTwo = () => {\n        this.columnMovingFieldParametrsOne();\n        let wptbHighlighted = document.getElementsByClassName( 'wptb-highlighted' );\n        if( wptbHighlighted.length > 0 ) {\n            wptbHighlighted = wptbHighlighted[0];\n\n            let coordinatesHighlighted = wptbHighlighted.getBoundingClientRect(),\n            coordinatesHighlightedWidth = parseFloat( coordinatesHighlighted.width );\n\n            this.columnMovingField.style.display = 'table';\n            this.columnMovingField.style.width = coordinatesHighlightedWidth + 'px';\n\n            let wptbTableSetup = document.getElementsByClassName( 'wptb-table-setup' );\n            if( wptbTableSetup.length > 0 ) {\n                wptbTableSetup = wptbTableSetup[0];\n\n                let coordinatesPreviewTable = wptbTableSetup.getBoundingClientRect();\n                this.columnMovingField.style.top = parseFloat( coordinatesPreviewTable.top ) - 30 + 'px';\n                this.columnMovingField.querySelector( '.column-visual-button-box-top' ).style.top = ( parseFloat( coordinatesPreviewTable.height ) + 30 ) + 'px';\n\n                let tableWithdrewColumn = this.columnMovingField.getElementsByClassName( 'wptb-table-setup' );\n                if( tableWithdrewColumn.length > 0 ) {\n                    tableWithdrewColumn = tableWithdrewColumn[0];\n\n                    tableWithdrewColumn.style.maxHeight = wptbTableSetup.getBoundingClientRect().height + 'px';\n                }\n            }\n        }\n    }\n\n    this.movingfieldTransition = () => {\n        let wptbHighlighted = document.querySelector( '.wptb-highlighted' );\n        let time = 0;\n        let intervalId = setInterval(() => {\n            let coordinatesHighlighted = wptbHighlighted.getBoundingClientRect();\n            this.columnMovingField.style.left = parseFloat( coordinatesHighlighted.left ) + 'px';\n            this.columnMovingField.positionLeft = parseFloat( coordinatesHighlighted.left );\n            if(time > 200) clearInterval(intervalId);\n            time +=3;\n        }, 3);\n    }\n\n//    this.columnMovingFieldParametrsTwoTransition = () => {\n//        this.leftPanel = document.querySelector( '.wptb-left-panel' );\n//        this.startLeft = this.leftPanel.getBoundingClientRect().left;\n//        this.endLeft;\n//\n//        if( this.startLeft == 0 ) {\n//            this.endLeft == 310;\n//        } else {\n//            this.endLeft == 0;\n//        }\n//\n//        let checkLeftPanelSizeDifference = () => {\n//            let left = this.leftPanel.getBoundingClientRect().left;\n//            if( left == this.endLeft ) {\n//                this.columnMovingFieldParametrsTwo();\n//                clearInterval( leftMovementButtonChangePosition );\n//            }\n//            this.columnMovingFieldParametrsTwo();\n//        }\n//\n//        let leftMovementButtonChangePosition = setInterval( checkLeftPanelSizeDifference, 1 );\n//    }\n\n    this.checkHighlighted = () => {\n        let highlighted = document.getElementsByClassName( 'wptb-highlighted' );\n        let body = document.getElementsByTagName( 'body' )[0];\n        if( highlighted.length != 1 ) {\n            let rowMovingField = document.querySelector( '.wptb-row-moving-field' );\n            if( rowMovingField ) {\n                let parent = rowMovingField.parentNode;\n                parent.removeChild( rowMovingField );\n            }\n        }\n        body.removeEventListener( 'click', this.checkHighlighted, false );\n    }\n\n    // function hide the moving field\n    this.rowMovingFieldHide = () => {\n        let rowMovingField = document.getElementsByClassName( 'wptb-row-moving-field' );\n        if( rowMovingField.length > 0 ) {\n            rowMovingField = rowMovingField[0];\n            rowMovingField.style.display = 'none';\n        }\n    }\n\n    this.withdrawSelectedColumnsFromTable = function() {\n        if( ! this.tablePreview ) {\n            this.tablePreview = document.querySelector( '.wptb-preview-table' );\n        }\n        let table = this.tablePreview,\n            cell = document.querySelector('.wptb-highlighted');\n        if(table && cell) {\n            let colspan = cell.colSpan,\n                col = parseInt( cell.dataset.xIndex, 10 ),\n                tableWithdrewColumns = document.createElement( 'table' ),\n                tableWithdrewColumnsTbody = document.createElement( 'tbody' );\n\n            tableWithdrewColumns.appendChild( tableWithdrewColumnsTbody );\n            tableWithdrewColumns.classList.add( 'wptb-preview-table' );\n\n            let tdsWidthWhichNeedAdd = [...table.getElementsByClassName( 'wptb-width-which-need-add' )];\n            for( let i = 0; i < tdsWidthWhichNeedAdd.length; i++ ) {\n                tdsWidthWhichNeedAdd[i].classList.remove( 'wptb-width-which-need-add' );\n                tdsWidthWhichNeedAdd[i].removeAttribute( 'data-width-which-need-add' );\n            }\n\n            let tableAttributes = table.attributes;\n\n            for( let i = 0; i < tableAttributes.length; i++ ) {\n                tableWithdrewColumns.setAttribute( tableAttributes[i].nodeName, tableAttributes[i].nodeValue );\n            }\n\n            tableWithdrewColumns.style.minWidth = '';\n            tableWithdrewColumns.style.width = '100%';\n\n            if ( ! colspan ) colspan = 1;\n\n            this.cutTableVertically( col );\n\n            this.cutTableVertically( col + colspan );\n\n            let arrWithTdsWhichNeedAddWidth = [];\n            for( let i = 0; i < table.rows.length; i++ ) {\n                let rowChildren = table.rows[i].children;\n                let rowWithdrewColumnsHeight = table.rows[i].getBoundingClientRect().height;\n                let rowWithdrewColumns = tableWithdrewColumns.insertRow( -1 );\n                rowWithdrewColumns.classList.add( 'wptb-row' );\n                rowWithdrewColumns.style.height = rowWithdrewColumnsHeight + 'px';\n                arrWithTdsWhichNeedAddWidth[i] = [];\n                for( let j = 0; j < rowChildren.length; j++ ) {\n                    if ( rowChildren[j].dataset.xIndex < col ) continue;\n                    if ( rowChildren[j].dataset.xIndex >= col + colspan ) break;\n\n                    rowChildren[j].dataset.wptbTdStyleBeforeMove = rowChildren[j].getAttribute('style');\n\n                    rowChildren[j].classList.add( 'wptb-width-which-need-add' );\n\n                    arrWithTdsWhichNeedAddWidth[i].push( rowChildren[j] );\n\n                    let newTd = rowChildren[j].cloneNode( true );\n                    // if(typeof rowChildren[j] === 'object' && rowChildren[j].hasOwnProperty('getCellDimensions')) {\n                    //     if(!newTd.style.width) {\n                    //         newTd.style.width = rowChildren[j].getCellDimensions().width + 'px';\n                    //     }\n                    //     if(!newTd.style.height) {\n                    //         newTd.style.height = rowChildren[j].getCellDimensions().height + 'px';\n                    //     }\n                    // }\n\n\n                    rowWithdrewColumns.appendChild(newTd);\n\n                    rowChildren[j].style.backgroundColor = '#d8d8d8';\n                    rowChildren[j].classList.add( 'wptb-column-moving' );\n\n                    if( parseInt( rowChildren[j].dataset.yIndex ) != 0 ) {\n                        rowChildren[j].classList.add( 'wptb-td-border-top-moving' );\n                    }\n                    if( parseInt( rowChildren[j].dataset.yIndex ) + rowChildren[j].rowSpan != table.rows.length ) {\n                        rowChildren[j].classList.add( 'wptb-td-border-bottom-moving' );\n                    }\n                    if( parseInt( rowChildren[j].dataset.xIndex ) != col ) {\n                        rowChildren[j].classList.add( 'wptb-td-border-left-moving' );\n                    }\n                    if( parseInt( rowChildren[j].dataset.xIndex ) + rowChildren[j].colSpan != col + colspan ) {\n                        rowChildren[j].classList.add( 'wptb-td-border-right-moving' );\n                    }\n                }\n            }\n\n            let cellFullStyleObj = window.getComputedStyle( cell, null );\n            let paddingLeft = cellFullStyleObj.getPropertyValue( 'padding-left' );\n            let paddingRight = cellFullStyleObj.getPropertyValue( 'padding-right' );\n            for( let i = 0; i < arrWithTdsWhichNeedAddWidth.length; i++ ) {\n                for( let j = 0; j < arrWithTdsWhichNeedAddWidth[i].length; j++ ) {\n                    arrWithTdsWhichNeedAddWidth[i][j].dataset.widthWhichNeedAdd = parseInt( arrWithTdsWhichNeedAddWidth[i][j].getBoundingClientRect().width ) -\n                        parseInt( parseInt( paddingLeft ) ) - parseInt( parseInt( paddingRight ) ) -\n                        parseInt( cell.style.borderWidth )/2 + 30/arrWithTdsWhichNeedAddWidth[i].length;\n                }\n            }\n\n            let tdsWhichNeedAddWidth = table.querySelectorAll('[data-width-which-need-add]');\n            for( let i = 0; i < tdsWhichNeedAddWidth.length; i++ ) {\n                tdsWhichNeedAddWidth[i].style.width = tdsWhichNeedAddWidth[i].dataset.widthWhichNeedAdd + 'px';\n            }\n\n            if(tableWithdrewColumns.style.borderCollapse === 'separate') {\n                let tableBS = tableWithdrewColumns.style.borderSpacing,\n                    bSColumns = '2px';\n                if(tableBS){\n                    let tableBsArr = tableBS.split(' ');\n                    if(tableBsArr && Array.isArray(tableBsArr)) {\n                        bSColumns = tableBsArr[0].trim();\n                    }\n                }\n                let tBody = tableWithdrewColumns.getElementsByTagName('tbody');\n                if(tBody.length > 0) {\n                    tBody = tBody[0];\n\n                    tBody.style.position = 'absolute';\n                    tBody.style.left = '-' + bSColumns;\n                    tBody.style.right = '-' + bSColumns;\n                    tBody.style.top = '0px';\n                    tBody.style.bottom = '0px'\n                }\n            }\n\n            return tableWithdrewColumns;\n        } else {\n            return false;\n        }\n    }\n\n    this.cutTableVertically = function( col ) {\n        if( ! this.tablePreview ) {\n            this.tablePreview = document.querySelector( '.wptb-preview-table' );\n        }\n        let table = this.tablePreview;\n        col = parseInt( col, 10 );\n\n        WPTB_CutGlueTable.cutTableVertically(col, table)\n    }\n\n    this.glueTableVertically = function() {\n        if( ! this.tablePreview ) {\n            this.tablePreview = document.querySelector( '.wptb-preview-table' );\n        }\n        let table = this.tablePreview;\n        WPTB_CutGlueTable.glueTableVertically(table)\n    }\n\n    this.withdrewColumnsPut = function( temporaryShow ) {\n        if( ! this.tablePreview ) {\n            this.tablePreview = document.querySelector( '.wptb-preview-table' );\n        }\n        let table = this.tablePreview;\n        if( table ) {\n            let wptbColumnMoving = [...table.getElementsByClassName( 'wptb-column-moving' )];\n            for( let i = 0; i < wptbColumnMoving.length; i++ ) {\n                wptbColumnMoving[i].classList.remove( 'wptb-column-moving' );\n                wptbColumnMoving[i].style.backgroundColor = '';\n                if( wptbColumnMoving[i].hasAttribute( 'data-wptb-td-style-before-move' ) ) {\n                    wptbColumnMoving[i].setAttribute('style', wptbColumnMoving[i].dataset.wptbTdStyleBeforeMove);\n                    wptbColumnMoving[i].removeAttribute( 'data-wptb-td-style-before-move' )\n                } else {\n                    wptbColumnMoving[i].style.width = '';\n                }\n                wptbColumnMoving[i].removeAttribute( 'data-width-which-need-add' );\n                wptbColumnMoving[i].classList.remove( 'wptb-width-which-need-add' );\n\n                wptbColumnMoving[i].classList.remove( 'wptb-td-border-top-moving' );\n                wptbColumnMoving[i].classList.remove( 'wptb-td-border-bottom-moving' );\n                wptbColumnMoving[i].classList.remove( 'wptb-td-border-left-moving' );\n                wptbColumnMoving[i].classList.remove( 'wptb-td-border-right-moving' );\n            }\n\n            this.glueTableVertically();\n\n            if( ! temporaryShow ) {\n                let highlighted = [...table.getElementsByClassName( 'wptb-highlighted' )];\n                for ( let i = 0; i < highlighted.length; i++ ) {\n                    highlighted[i].classList.remove( 'wptb-highlighted' );\n                }\n\n                let tds = [...table.getElementsByTagName( 'td' )];\n                for( let i = 0; i < tds.length; i++ ) {\n                    if( tds[i].hasAttribute( 'data-same-cell-before-division' ) ) {\n                        tds[i].removeAttribute( 'data-same-cell-before-division' );\n                    }\n                }\n            }\n        }\n    }\n\n    window.wptbColumnMove = this;\n}\n","var WPTB_RowMove = function () {\n    this.rowMovingField;\n\n    this.withdrawTable;\n\n    this.tablePreview;\n\n    this.tBody;\n\n    this.body;\n\n    this.setTimeoutWhenStopMove;\n\n    this.wptbHeaderCoordinates;\n\n    this.wptbContainer;\n\n    this.setTimeoutScrollTop;\n\n    this.autoScroll = false;\n\n    this.eventMove;\n\n    // function creates a field for move a row to top or bottom\n    // and after creating puts it on the right place\n    this.rowMovingFieldPutActive = () => {\n        let rowMovingField = document.getElementsByClassName( 'wptb-row-moving-field' );\n        let body = document.getElementsByTagName( 'body' )[0];\n        this.body = body;\n        if( rowMovingField.length > 0 ) {\n            this.rowMovingField = rowMovingField[0];\n        } else {\n            rowMovingField = document.createElement( 'div' );\n            rowMovingField.classList.add( 'wptb-row-moving-field' );\n            let visualButtonBox = document.createElement( 'div' );\n            visualButtonBox.classList.add( 'row-visual-button-box' );\n            visualButtonBox.innerHTML = '<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" \\n\\\n                    x=\"0px\" y=\"0px\" width=\"30\" height=\"30\" viewBox=\"0 0 511.626 511.627\" \\n\\\n                    style=\"enable-background:new 0 0 511.626 511.627;\" xml:space=\"preserve\">\\n\\\n                    <path d=\"M328.906,401.994h-36.553V109.636h36.553c4.948,0,9.236-1.809,12.847-5.426c3.613-3.615,5.421-7.898,5.421-12.845 \\n\\\n                        c0-4.949-1.801-9.231-5.428-12.851l-73.087-73.09C265.044,1.809,260.76,0,255.813,0c-4.948,0-9.229,1.809-12.847,5.424 \\n\\\n                        l-73.088,73.09c-3.618,3.619-5.424,7.902-5.424,12.851c0,4.946,1.807,9.229,5.424,12.845c3.619,3.617,7.901,5.426,12.85,5.426 \\n\\\n                        h36.545v292.358h-36.542c-4.952,0-9.235,1.808-12.85,5.421c-3.617,3.621-5.424,7.905-5.424,12.854 \\n\\\n                        c0,4.945,1.807,9.227,5.424,12.847l73.089,73.088c3.617,3.617,7.898,5.424,12.847,5.424c4.95,0,9.234-1.807,12.849-5.424 \\n\\\n                        l73.087-73.088c3.613-3.62,5.421-7.901,5.421-12.847c0-4.948-1.808-9.232-5.421-12.854 \\n\\\n                        C338.142,403.802,333.857,401.994,328.906,401.994z\" style=\"fill:#FFFFFF\"></path>\\n\\\n                </svg>';\n\n            let visualButtonBoxLeft = visualButtonBox.cloneNode( true );\n\n            visualButtonBoxLeft.classList.add( 'row-visual-button-box-left' );\n\n            rowMovingField.appendChild( visualButtonBox );\n            rowMovingField.appendChild( visualButtonBoxLeft );\n\n            body.appendChild( rowMovingField );\n\n            this.rowMovingField = rowMovingField;\n        }\n        rowMovingField.deleteEventHandlers = () => {\n            let wptbContainer = document.getElementsByClassName( 'wptb-container' )[0];\n            wptbContainer.removeEventListener( 'scroll', this.rowMovingFieldParametrsOne, false );\n            window.removeEventListener( 'resize', this.rowMovingFieldParametrsTwo, false );\n            //document.querySelector( '.wptb-panel-drawer-icon' ).removeEventListener( 'click', this.movingfieldTransition, false );\n        }\n\n        if( ! this.wptbContainer ) {\n            this.wptbContainer = document.getElementsByClassName( 'wptb-container' )[0];\n        }\n        let wptbContainer = this.wptbContainer;\n\n        let wptbHighlighted = document.getElementsByClassName( 'wptb-highlighted' );\n        if( wptbHighlighted.length > 0 ) {\n            wptbHighlighted = wptbHighlighted[0];\n\n            this.rowMovingFieldParametrsOne();\n            this.rowMovingFieldParametrsTwo();\n        }\n\n        wptbContainer.addEventListener( 'scroll', this.rowMovingFieldParametrsOne, false );\n        window.addEventListener( 'resize', this.rowMovingFieldParametrsTwo, false );\n        body.addEventListener( 'click', this.checkHighlighted, false );\n        //document.querySelector( '.wptb-panel-drawer-icon' ).addEventListener( 'click', this.movingfieldTransition, false );\n\n        let insertRowsMoving = ( eventMove ) => {\n            if( ! this.withdrawTableContainer ) {\n                this.withdrawTableContainer = document.querySelector( '.wptb-withdraw-row-table-container' );\n            }\n            let withdrawTableContainer = this.withdrawTableContainer;\n\n            withdrawTableContainer.style.display = 'block';\n\n            if( ! this.rowMovingField ) {\n                this.rowMovingField = document.querySelector( '.wptb-row-moving-field' );\n            }\n            let rowMovingField = this.rowMovingField;\n\n            let downYcoordinates = rowMovingField.downYcoordinates;\n            let differenceY = downYcoordinates - eventMove.clientY;\n\n            let rowMovingFieldTopCoordinates = ( parseFloat( rowMovingField.positionTop ) - parseFloat( differenceY ) );\n\n            let rowMovingFieldBottomCoordinates = rowMovingFieldTopCoordinates + parseFloat( rowMovingField.height );\n\n            if( ! this.tablePreview ) {\n                this.tablePreview = document.querySelector( '.wptb-preview-table' );\n            }\n            let tablePreview = this.tablePreview;\n\n            let tableCoordinatesTop = parseFloat( tablePreview.getBoundingClientRect().top );\n\n            let tableCoordinatesBottom = parseFloat( tablePreview.getBoundingClientRect().bottom );\n\n            rowMovingField.style.top = rowMovingFieldTopCoordinates + 'px';\n\n            if( tableCoordinatesTop - parseFloat( rowMovingField.style.top ) >= 20 ) {\n                rowMovingField.style.top = ( tableCoordinatesTop - 20 ) + 'px';\n            } else if( parseFloat( rowMovingField.style.top ) + parseFloat( rowMovingField.height ) - tableCoordinatesBottom >= 20 )  {\n                rowMovingField.style.top = ( tableCoordinatesBottom - parseFloat( rowMovingField.height ) + 20 ) + 'px';\n            }\n\n            let tBody = tablePreview.querySelector( 'tbody' );\n\n            let rowsMoving = tBody.getElementsByClassName( 'wptb-row-moving' );\n            let rowsMovingDeleted = [];\n            if( rowsMoving.length > 0 ) {\n                if( rowMovingField.rowsTopBottomCoordinatesArr['top'] &&\n                        parseInt( rowMovingField.rowsTopBottomCoordinatesArr['top'][1], 10 ) >= rowMovingFieldTopCoordinates ) {\n                    for( let i = 0; i < rowsMoving.length; i++ ) {\n                        rowsMovingDeleted.push( rowsMoving[i] );\n                    }\n\n                    for( let i = 0; i < rowsMovingDeleted.length; i++ ) {\n                        tBody.removeChild( rowsMovingDeleted[i] );\n                    }\n\n                    console.log( rowMovingField.rowsTopBottomCoordinatesArr['top'][1] )\n\n                    this.cutTableHorizontally( rowMovingField.rowsTopBottomCoordinatesArr['top'][0] );\n\n                    for( let i = 0; i < rowsMovingDeleted.length; i++ ) {\n                        tBody.insertBefore( rowsMovingDeleted[i], tablePreview.rows[rowMovingField.rowsTopBottomCoordinatesArr['top'][0] + i] );\n                    }\n\n                    tablePreview.recalculateIndexes();\n\n                    if( tablePreview.rows[rowMovingField.rowsTopBottomCoordinatesArr['top'][0] + 1] && tablePreview.rows[rowMovingField.rowsTopBottomCoordinatesArr['top'][0] + 2] ) {\n                        this.glueTableHorizontally( tablePreview.rows[rowMovingField.rowsTopBottomCoordinatesArr['top'][0] + 1],\n                            tablePreview.rows[rowMovingField.rowsTopBottomCoordinatesArr['top'][0] + 2] );\n                    }\n\n                    rowMovingField.rowsTopBottomCoordinatesArr = setRowsTopBottomCoordinates();\n                } else if( rowMovingField.rowsTopBottomCoordinatesArr['bottom'] &&\n                        parseInt( rowMovingField.rowsTopBottomCoordinatesArr['bottom'][1], 10 ) <= rowMovingFieldBottomCoordinates ) {\n                    for( let i = 0; i < rowsMoving.length; i++ ) {\n                        rowsMovingDeleted.push( rowsMoving[i] );\n                    }\n\n                    for( let i = 0; i < rowsMovingDeleted.length; i++ ) {\n                        tBody.removeChild( rowsMovingDeleted[i] );\n                    }\n\n                    this.cutTableHorizontally( rowMovingField.rowsTopBottomCoordinatesArr['bottom'][0] - rowsMovingDeleted.length );\n\n                    for( let i = 0; i < rowsMovingDeleted.length; i++ ) {\n                        tBody.insertBefore( rowsMovingDeleted[i], tablePreview.rows[rowMovingField.rowsTopBottomCoordinatesArr['bottom'][0] - rowsMovingDeleted.length + i] );\n                    }\n\n                    tablePreview.recalculateIndexes();\n\n                    if( tablePreview.rows[rowMovingField.rowsTopBottomCoordinatesArr['bottom'][0] - 3] && tablePreview.rows[rowMovingField.rowsTopBottomCoordinatesArr['bottom'][0] - 2] ) {\n                        this.glueTableHorizontally( tablePreview.rows[rowMovingField.rowsTopBottomCoordinatesArr['bottom'][0] - 3],\n                            tablePreview.rows[rowMovingField.rowsTopBottomCoordinatesArr['bottom'][0] - 2] );\n                    }\n\n                    rowMovingField.rowsTopBottomCoordinatesArr = setRowsTopBottomCoordinates();\n                }\n\n                WPTB_Helper.wptbDocumentEventGenerate('wp-table-builder/table-changed/after', tablePreview);\n            }\n        }\n        // sets handler for the event when the moving field was moved\n        this.rowMovingField.onmousedown = ( eventDown ) => {\n            // delete column moving field and delete all its handlers\n            let body = document.getElementsByTagName( 'body' )[0];\n            let wptbColumnMovingField = document.querySelector( '.wptb-column-moving-field' );\n            if( wptbColumnMovingField ) {\n                wptbColumnMovingField.deleteEventHandlers();\n                body.removeChild( wptbColumnMovingField );\n            }\n\n            this.rowMovingField.downYcoordinates = eventDown.clientY;\n\n            if( ! this.withdrawTable ) {\n                this.withdrawTable = this.withdrawSelectedRowsFromTable();\n            }\n\n            let tablePreview = document.querySelector( '.wptb-preview-table' );\n\n            if( ! this.rowMovingField ) {\n                this.rowMovingField = document.querySelector( '.wptb-row-moving-field' );\n            }\n            let rowMovingField = this.rowMovingField;\n            if( rowMovingField ) {\n                let withdrawTableContainer = document.createElement( 'div' );\n                withdrawTableContainer.classList.add( 'wptb-withdraw-row-table-container' );\n\n                withdrawTableContainer.appendChild( this.withdrawTable );\n\n                rowMovingField.appendChild( withdrawTableContainer );\n\n                withdrawTableContainer.style.position = 'absolute';\n                withdrawTableContainer.style.right = '30px';\n                withdrawTableContainer.style.height = '100%';\n\n                if( tablePreview ) {\n                    withdrawTableContainer.style.width = tablePreview.getBoundingClientRect().width + 'px';\n                    withdrawTableContainer.style.maxWidth = tablePreview.parentNode.getBoundingClientRect().width + 'px';\n                    withdrawTableContainer.style.overflow = 'hidden';\n                    let withdrawTable = withdrawTableContainer.querySelector( '.wptb-preview-table' );\n                    if( withdrawTable ) {\n                        withdrawTable.style.marginLeft = - tablePreview.parentNode.scrollLeft + 'px';\n                    }\n                }\n            }\n\n            rowMovingField.rowsTopBottomCoordinatesArr = setRowsTopBottomCoordinates();\n\n            body.onmousemove = ( eventMove ) => {\n                let rowMovingField = document.querySelector( '.wptb-row-moving-field' );\n\n                if( ! this.wptbHeaderCoordinates ) {\n                    this.wptbHeaderCoordinates = body.querySelector( '.wptb-header' ).getBoundingClientRect();\n                }\n                let wptbHeaderCoordinates = this.wptbHeaderCoordinates;\n\n                if( ! this.wptbContainer ) {\n                    this.wptbContainer = document.getElementsByClassName( 'wptb-container' )[0];\n                }\n                let wptbContainer = this.wptbContainer;\n\n                clearInterval( rowMovingField.setIntervalScrollTop );\n                let difference = wptbHeaderCoordinates.bottom - rowMovingField.getBoundingClientRect().top;\n                if( difference > 10 && eventMove.movementY <= 0 ) {\n                    let setIntervalPeriod = 2;\n                    if( ! rowMovingField.startScrollPositionY ) {\n                        rowMovingField.startScrollPositionY = eventMove.clientY;\n                    } else {\n                        let cursorDifference = rowMovingField.startScrollPositionY - eventMove.clientY;\n\n                        if( cursorDifference <= 0 ) {\n                            setIntervalPeriod = 0;\n                        }\n                    }\n                    if( setIntervalPeriod ) {\n                        this.eventMove = eventMove;\n                        rowMovingField.setIntervalScrollTop = setInterval( function() {\n                            wptbContainer.scrollTop = parseFloat( wptbContainer.scrollTop ) - 5;\n\n                            rowMovingField.rowsTopBottomCoordinatesArr = setRowsTopBottomCoordinates();\n                            insertRowsMoving( eventMove );\n                        }, setIntervalPeriod );\n\n                        rowMovingField.autoScroll = true;\n                    } else {\n                        clearInterval( rowMovingField.setIntervalScrollTop );\n                    }\n                } else if( rowMovingField.getBoundingClientRect().bottom - body.getBoundingClientRect().bottom > 10 && eventMove.movementY > 0 ) {\n                    let setIntervalPeriod = 2;\n                    if( ! rowMovingField.startScrollPositionY ) {\n                        rowMovingField.startScrollPositionY = eventMove.clientY;\n                    } else {\n                        let cursorDifference = eventMove.clientY - rowMovingField.startScrollPositionY;\n\n                        if( cursorDifference <= 0 ) {\n                            setIntervalPeriod = 0;\n                        }\n                    }\n                    if( setIntervalPeriod ) {\n                        rowMovingField.setIntervalScrollTop = setInterval( function() {\n                            wptbContainer.scrollTop = parseFloat( wptbContainer.scrollTop ) + 5;\n\n                            rowMovingField.rowsTopBottomCoordinatesArr = setRowsTopBottomCoordinates();\n                            insertRowsMoving( eventMove );\n                        }, setIntervalPeriod );\n\n                        rowMovingField.autoScroll = true;\n                    } else {\n                        clearInterval( rowMovingField.setIntervalScrollTop );\n                    }\n\n                } else {\n                    clearInterval( rowMovingField.setIntervalScrollTop );\n                }\n\n                if( rowMovingField ) {\n                    body.onmouseup = () => {\n                        let rowMovingField = document.querySelector( '.wptb-row-moving-field' );\n                        if( rowMovingField ) {\n                            body.removeChild( rowMovingField );\n\n                            this.withdrewRowsPut();\n\n                            this.withdrawTable = null;\n                        }\n\n                        clearInterval( rowMovingField.setIntervalScrollTop );\n\n                        body.onmouseup = null;\n                        body.onmousemove = null;\n\n                        let tablePreview = document.querySelector( '.wptb-preview-table' );\n                        tablePreview.undoSelect();\n\n                        WPTB_Helper.wptbDocumentEventGenerate('wp-table-builder/table-changed/after', tablePreview);\n\n                        let wptbTableStateSaveManager = new WPTB_TableStateSaveManager();\n                        wptbTableStateSaveManager.tableStateSet();\n                    }\n\n                    insertRowsMoving( eventMove );\n                }\n            }\n        }\n\n        function setRowsTopBottomCoordinates( row ) {\n            let table = document.querySelector( '.wptb-preview-table' );\n            let cell = table.querySelector('.wptb-highlighted'),\n                rowspan = cell.rowSpan;\n\n            let rowsTopBottomCoordinatesArr = [];\n            if( ! row ) {\n                row = parseInt( cell.dataset.yIndex, 10 );\n            }\n\n            if( table.rows[row - 1] ) {\n                let topCoordinates = ( 7 * table.rows[row - 1].getBoundingClientRect().top +\n                        3 * table.rows[row - 1].getBoundingClientRect().bottom ) / 10;\n                rowsTopBottomCoordinatesArr['top'] = [row - 1, topCoordinates];\n            }\n\n            if( table.rows[row + rowspan] ) {\n                let bottomCoordinates = ( 3 * table.rows[row + rowspan].getBoundingClientRect().top + 7 * table.rows[row + rowspan].getBoundingClientRect().bottom ) / 10;\n                rowsTopBottomCoordinatesArr['bottom'] = [row + rowspan + 1, bottomCoordinates];\n            }\n\n            return rowsTopBottomCoordinatesArr;\n        }\n\n        // returns difference of positions of moving field before and after moving when this field was moved\n        function cursorPositionDifference( eventMove, body, rowMovingField ) {\n\n        }\n    }\n\n    // function set coordinates top and write property positionTop for moving field\n    this.rowMovingFieldParametrsOne = () => {\n        let rowMovingField = document.querySelector( '.wptb-row-moving-field' );\n        let wptbHighlighted = document.querySelector( '.wptb-highlighted' );\n        if( rowMovingField && ! rowMovingField.autoScroll && wptbHighlighted ) {\n            let coordinatesHighlighted = wptbHighlighted.getBoundingClientRect();\n            this.rowMovingField.style.top = parseFloat( coordinatesHighlighted.top ) + 'px';\n            this.rowMovingField.positionTop = parseFloat( coordinatesHighlighted.top );\n            this.rowMovingField.height = parseFloat( coordinatesHighlighted.height );\n        }\n    }\n\n    // function set position left and height for moving field\n    this.rowMovingFieldParametrsTwo = () => {\n        //this.rowMovingFieldParametrsOne();\n        let wptbHighlighted = document.getElementsByClassName( 'wptb-highlighted' );\n        if( wptbHighlighted.length > 0 ) {\n            wptbHighlighted = wptbHighlighted[0];\n\n            let coordinatesHighlighted = wptbHighlighted.getBoundingClientRect(),\n            coordinatesHighlightedHeight = parseFloat( coordinatesHighlighted.height );\n\n            this.rowMovingField.style.display = 'table';\n            this.rowMovingField.style.height = coordinatesHighlightedHeight + 'px';\n\n            let wptbTableSetup = document.getElementsByClassName( 'wptb-table-setup' );\n            if( wptbTableSetup.length > 0 ) {\n                wptbTableSetup = wptbTableSetup[0];\n\n                let coordinatesPreviewTable = wptbTableSetup.getBoundingClientRect()\n                this.rowMovingField.style.left = parseFloat( coordinatesPreviewTable.right ) + 'px';\n                this.rowMovingField.querySelector( '.row-visual-button-box-left' ).style.left = '-' + ( parseFloat( coordinatesPreviewTable.width ) + 30 ) + 'px';\n\n                let tableWithdrewRows = this.rowMovingField.getElementsByClassName( 'wptb-table-setup' );\n                if( tableWithdrewRows.length > 0 ) {\n                    tableWithdrewRows = tableWithdrewRows[0];\n\n                    tableWithdrewRows.style.maxWidth = wptbTableSetup.getBoundingClientRect().width + 'px';\n                }\n            }\n        }\n    }\n\n    this.movingfieldTransition = () => {\n        let wptbTableSetup = document.querySelector('.wptb-table-setup');\n        let time = 0;\n        let intervalId = setInterval(() => {\n            let coordinatesPreviewTable = wptbTableSetup.getBoundingClientRect();\n            this.rowMovingField.style.left = parseFloat( coordinatesPreviewTable.right ) + 'px';\n            if(time > 200) clearInterval(intervalId);\n            time +=3;\n        }, 3);\n    }\n\n//    this.rowMovingFieldParametrsTwoTransition = () => {\n//        this.leftPanel = document.querySelector( '.wptb-left-panel' );\n//        this.startLeft = this.leftPanel.getBoundingClientRect().left;\n//        this.endLeft;\n//\n//        if( this.startLeft == 0 ) {\n//            this.endLeft == 310;\n//        } else {\n//            this.endLeft == 0;\n//        }\n//\n//        let checkLeftPanelSizeDifference = () => {\n//            let left = this.leftPanel.getBoundingClientRect().left;\n//            if( left == this.endLeft ) {\n//                this.rowMovingFieldParametrsTwo();\n//                clearInterval( leftMovementButtonChangePosition );\n//            }\n//            this.rowMovingFieldParametrsTwo();\n//        }\n//\n//        let leftMovementButtonChangePosition = setInterval( checkLeftPanelSizeDifference, 1 );\n//    }\n\n    this.checkHighlighted = () => {\n        let highlighted = document.getElementsByClassName( 'wptb-highlighted' );\n        let body = document.getElementsByTagName( 'body' )[0];\n        if( highlighted.length != 1 ) {\n            rowMovingField = document.querySelector( '.wptb-row-moving-field' );\n            if( rowMovingField ) {\n                let parent = rowMovingField.parentNode;\n                parent.removeChild( rowMovingField );\n            }\n        }\n        body.removeEventListener( 'click', this.checkHighlighted, false );\n    }\n\n    // function hide the moving field\n    this.rowMovingFieldHide = () => {\n        let rowMovingField = document.getElementsByClassName( 'wptb-row-moving-field' );\n        if( rowMovingField.length > 0 ) {\n            rowMovingField = rowMovingField[0];\n            rowMovingField.style.display = 'none';\n        }\n    }\n\n    this.withdrawSelectedRowsFromTable = function() {\n        if( ! this.tablePreview ) {\n            this.tablePreview = document.querySelector( '.wptb-preview-table' );\n        }\n        let table = this.tablePreview,\n            cell = document.querySelector('.wptb-highlighted'),\n            rowspan = cell.rowSpan,\n            row = parseInt( cell.dataset.yIndex, 10 ),\n            tableWithdrewRows = document.createElement( 'table' ),\n            tableWithdrewRowsTbody = document.createElement( 'tbody' );\n            tableWithdrewRows.appendChild( tableWithdrewRowsTbody );\n            tableWithdrewRows.classList.add( 'wptb-preview-table' );\n\n            if( table ) {\n                let tableAttributes = table.attributes;\n\n                for( let i = 0; i < tableAttributes.length; i++ ) {\n                    tableWithdrewRows.setAttribute( tableAttributes[i].nodeName, tableAttributes[i].nodeValue );\n                }\n            }\n\n        if ( ! rowspan ) rowspan = 1;\n\n        this.cutTableHorizontally( row );\n\n        this.cutTableHorizontally( row + rowspan );\n\n        let tableRowsWithDrewArr = [];\n        for( let i = row; i < row + rowspan; i++ ) {\n            tableRowsWithDrewArr.push( table.rows[i] );\n            let row = table.rows[i],\n                withdrewRow = row.cloneNode(true),\n                tdsRow = row.children,\n                tdsWithDrew = withdrewRow.children;\n            // for(let j = 0; j < tdsRow.length; j++) {\n            //     if(typeof tdsRow[j] === 'object' && tdsRow[j].hasOwnProperty('getCellDimensions')) {\n            //         if(!tdsWithDrew[j].style.width) {\n            //             tdsWithDrew[j].style.width = tdsRow[j].getCellDimensions().width + 'px';\n            //         }\n            //         if(!tdsWithDrew[j].style.height) {\n            //             tdsWithDrew[j].style.height = tdsRow[j].getCellDimensions().height + 'px';\n            //         }\n            //     }\n            // }\n\n            tableWithdrewRowsTbody.appendChild( withdrewRow );\n\n            if( i == row || i == row + rowspan - 1 ) {\n                table.rows[i].style.height = parseInt( table.rows[i].getBoundingClientRect().height ) + parseInt( cell.style.borderWidth )/2 + 15 + 'px';\n            } else {\n                table.rows[i].style.height = parseInt( table.rows[i].getBoundingClientRect().height ) + parseInt( cell.style.borderWidth )/2 + 'px';\n            }\n\n            let rowsIChildren = table.rows[i].children;\n            for( let j = 0; j < rowsIChildren.length; j++ ) {\n                if( parseInt( rowsIChildren[j].dataset.yIndex ) != 0 ) {\n                    rowsIChildren[j].classList.add( 'wptb-td-border-top-moving' );\n                }\n                if( parseInt( rowsIChildren[j].dataset.yIndex ) + rowsIChildren[j].rowSpan != row + rowspan ) {\n                    rowsIChildren[j].classList.add( 'wptb-td-border-bottom-moving' );\n                }\n                if( parseInt( rowsIChildren[j].dataset.xIndex ) != 0 ) {\n                    rowsIChildren[j].classList.add( 'wptb-td-border-left-moving' );\n                }\n                if( parseInt( rowsIChildren[j].dataset.xIndex ) + rowsIChildren[j].colSpan != rowsIChildren.length ) {\n                    rowsIChildren[j].classList.add( 'wptb-td-border-right-moving' );\n                }\n            }\n\n            table.rows[i].classList.add( 'wptb-row-moving' );\n        }\n\n        let rowNew = tableWithdrewRows.insertRow(-1);\n        rowNew.classList.add( 'wptb-row' );\n        rowNew.style.display = 'none';\n        for( let i = 0; i < table.maxCols; i++ ) {\n            let td = new WPTB_Cell( table.mark );\n            td.getDOMElement().dataset.wptbCssTdAutoWidth = 'true';\n            tableWithdrewRows.rows[tableWithdrewRows.rows.length - 1].appendChild( td.getDOMElement() );\n        }\n\n        if(tableWithdrewRows.style.borderCollapse === 'separate') {\n            let tableBS = tableWithdrewRows.style.borderSpacing,\n                bSRows = '2px';\n            if(tableBS){\n                let tableBsArr = tableBS.split(' ');\n                if(tableBsArr && Array.isArray(tableBsArr)) {\n                    bSRows = tableBsArr[0].trim();\n                    if(1 in tableBsArr && tableBsArr[1]) {\n                        bSRows = tableBsArr[1].trim();\n                    } else {\n                        bSRows = tableBsArr[0].trim();\n                    }\n                }\n            }\n            let tBody = tableWithdrewRows.getElementsByTagName('tbody');\n            if(tBody.length > 0) {\n                tBody = tBody[0];\n\n                tBody.style.position = 'relative';\n                tBody.style.top = '-' + bSRows;\n                tBody.style.bottom = '-' + bSRows;\n                tBody.style.left = '0px';\n                tBody.style.right = '0px'\n            }\n        }\n\n        return tableWithdrewRows;\n    }\n\n    this.cutTableHorizontally = function( rowBefore ) {\n        if( ! this.tablePreview ) {\n            this.tablePreview = document.querySelector( '.wptb-preview-table' );\n        }\n        let table = this.tablePreview;\n        rowBefore = parseInt( rowBefore, 10 );\n\n        WPTB_CutGlueTable.cutTableHorizontally(rowBefore, table)\n    }\n\n    this.glueTableHorizontally = function() {\n        if( ! this.tablePreview ) {\n            this.tablePreview = document.querySelector( '.wptb-preview-table' );\n        }\n        let table = this.tablePreview;\n\n        WPTB_CutGlueTable.glueTableHorizontally(table)\n    }\n\n    this.withdrewRowsPut = function( temporaryShow ) {\n        if( ! this.tablePreview ) {\n            this.tablePreview = document.querySelector( '.wptb-preview-table' );\n        }\n        let table = this.tablePreview;\n        if( table ) {\n            let rows = table.rows;\n            for( let i = 0; i < rows.length; i++ ) {\n                if( rows[i].classList.contains( 'wptb-row-moving' ) ) {\n                    let children = rows[i].children;\n\n                    for( let j = 0; j < children.length; j++ ) {\n                        children[j].classList.remove( 'wptb-td-border-top-moving' );\n                        children[j].classList.remove( 'wptb-td-border-bottom-moving' );\n                        children[j].classList.remove( 'wptb-td-border-left-moving' );\n                        children[j].classList.remove( 'wptb-td-border-right-moving' );\n                    }\n\n                    rows[i].style.height = '';\n                    rows[i].classList.remove( 'wptb-row-moving' );\n                }\n            }\n\n            this.glueTableHorizontally();\n\n            if( ! temporaryShow ) {\n                let highlighted = [...table.getElementsByClassName( 'wptb-highlighted' )];\n                for ( let i = 0; i < highlighted.length; i++ ) {\n                    highlighted[i].classList.remove( 'wptb-highlighted' );\n                }\n\n                let tds = [...table.getElementsByTagName( 'td' )];\n                for( let i = 0; i < tds.length; i++ ) {\n                    if( tds[i].hasAttribute( 'data-same-cell-before-division' ) ) {\n                        tds[i].removeAttribute( 'data-same-cell-before-division' );\n                    }\n                }\n            }\n        }\n    }\n\n    window.wptbRowMove = this;\n}\n","var WPTB_TableDirectives = function (table) {\n    this.table = table;\n    const tableDirectivesDataKey = 'wptbTableDirectives';\n\n    this.getDirectives = function () {\n        const encodedTableDirectives = this.table.dataset[tableDirectivesDataKey];\n        if (encodedTableDirectives === undefined) {\n            return false;\n        } else {\n            return JSON.parse(atob(encodedTableDirectives));\n        }\n    }\n\n    this.saveDirectives = function () {\n        if(!this.tableDirectives) return;\n        const encodedTableDirectives = btoa(JSON.stringify(this.tableDirectives));\n        this.table.dataset[tableDirectivesDataKey] = encodedTableDirectives;\n    }\n\n    this.getDirective = function (way) {\n        this.tableDirectives = this.getDirectives();\n        if(!this.tableDirectives) this.tableDirectives = {};\n        let field = this.tableDirectives;\n        let value;\n        for(let i = 0; i < way.length; i++) {\n            if(!field.hasOwnProperty(way[i])) {\n                value = false;\n                break;\n            } else {\n                if(i === way.length - 1) {\n                    value = field[way[i]];\n                    break;\n                }\n                field = field[way[i]];\n            }\n        }\n\n        return value;\n    }\n\n    this.setDirective = function (way, value) {\n        this.tableDirectives = this.getDirectives();\n        if(!this.tableDirectives) this.tableDirectives = {};\n        let field = this.tableDirectives;\n        for(let i = 0; i < way.length; i++) {\n\n            if(i === way.length - 1) {\n                field[way[i]] = value;\n                this.saveDirectives();\n                break;\n            }\n            if(!field.hasOwnProperty(way[i])) {\n                field[way[i]] = {};\n            }\n\n            field = field[way[i]];\n        }\n    }\n\n    this.tableDirectives = this.getDirectives();\n}\n"]}